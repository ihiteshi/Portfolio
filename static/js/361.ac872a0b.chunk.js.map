{"version":3,"file":"static/js/361.ac872a0b.chunk.js","mappings":"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","sources":["../node_modules/framer-motion/dist/es/utils/shallow-compare.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-dynamic-variants.mjs","../node_modules/framer-motion/dist/es/utils/time-conversion.mjs","../node_modules/framer-motion/dist/es/utils/use-instant-transition-state.mjs","../node_modules/framer-motion/dist/es/easing/utils/is-bezier-definition.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/easing.mjs","../node_modules/framer-motion/dist/es/easing/cubic-bezier.mjs","../node_modules/framer-motion/dist/es/easing/ease.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/mirror.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/reverse.mjs","../node_modules/framer-motion/dist/es/easing/circ.mjs","../node_modules/framer-motion/dist/es/easing/back.mjs","../node_modules/framer-motion/dist/es/easing/utils/map.mjs","../node_modules/framer-motion/dist/es/easing/anticipate.mjs","../node_modules/framer-motion/dist/es/value/types/color/utils.mjs","../node_modules/framer-motion/dist/es/value/types/color/rgba.mjs","../node_modules/framer-motion/dist/es/value/types/color/hex.mjs","../node_modules/framer-motion/dist/es/value/types/color/hsla.mjs","../node_modules/framer-motion/dist/es/value/types/color/index.mjs","../node_modules/framer-motion/dist/es/utils/mix.mjs","../node_modules/framer-motion/dist/es/utils/hsla-to-rgba.mjs","../node_modules/framer-motion/dist/es/utils/mix-color.mjs","../node_modules/framer-motion/dist/es/utils/pipe.mjs","../node_modules/framer-motion/dist/es/value/types/complex/index.mjs","../node_modules/framer-motion/dist/es/utils/mix-complex.mjs","../node_modules/framer-motion/dist/es/utils/progress.mjs","../node_modules/framer-motion/dist/es/utils/interpolate.mjs","../node_modules/framer-motion/dist/es/utils/offsets/default.mjs","../node_modules/framer-motion/dist/es/utils/offsets/fill.mjs","../node_modules/framer-motion/dist/es/animation/generators/keyframes.mjs","../node_modules/framer-motion/dist/es/easing/utils/is-easing-array.mjs","../node_modules/framer-motion/dist/es/utils/offsets/time.mjs","../node_modules/framer-motion/dist/es/utils/velocity-per-second.mjs","../node_modules/framer-motion/dist/es/animation/generators/utils/velocity.mjs","../node_modules/framer-motion/dist/es/animation/generators/spring/find.mjs","../node_modules/framer-motion/dist/es/animation/generators/spring/index.mjs","../node_modules/framer-motion/dist/es/animation/generators/inertia.mjs","../node_modules/framer-motion/dist/es/animation/animators/js/driver-frameloop.mjs","../node_modules/framer-motion/dist/es/animation/generators/utils/calc-duration.mjs","../node_modules/framer-motion/dist/es/animation/animators/js/index.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/create-accelerated-animation.mjs","../node_modules/framer-motion/dist/es/utils/memo.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/index.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/get-final-keyframe.mjs","../node_modules/framer-motion/dist/es/animation/utils/default-transitions.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animatable.mjs","../node_modules/framer-motion/dist/es/value/types/complex/filter.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/defaults.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/animatable-none.mjs","../node_modules/framer-motion/dist/es/utils/is-zero-value-string.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-none.mjs","../node_modules/framer-motion/dist/es/animation/utils/transitions.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/motion-value.mjs","../node_modules/framer-motion/dist/es/animation/utils/keyframes.mjs","../node_modules/framer-motion/dist/es/animation/animators/instant.mjs","../node_modules/framer-motion/dist/es/value/use-will-change/is.mjs","../node_modules/framer-motion/dist/es/utils/is-numerical-string.mjs","../node_modules/framer-motion/dist/es/utils/subscription-manager.mjs","../node_modules/framer-motion/dist/es/utils/array.mjs","../node_modules/framer-motion/dist/es/value/index.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/test.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/dimensions.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-auto.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/find.mjs","../node_modules/framer-motion/dist/es/render/utils/setters.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-target.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-variant.mjs","../node_modules/framer-motion/dist/es/render/utils/animation-state.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element.mjs","../node_modules/framer-motion/dist/es/motion/features/Feature.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/exit.mjs","../node_modules/framer-motion/dist/es/motion/features/animations.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/index.mjs","../node_modules/framer-motion/dist/es/events/add-dom-event.mjs","../node_modules/framer-motion/dist/es/events/event-info.mjs","../node_modules/framer-motion/dist/es/events/add-pointer-event.mjs","../node_modules/framer-motion/dist/es/events/utils/is-primary-pointer.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/lock.mjs","../node_modules/framer-motion/dist/es/gestures/hover.mjs","../node_modules/framer-motion/dist/es/gestures/utils/is-node-or-child.mjs","../node_modules/framer-motion/dist/es/gestures/press.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/observers.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/index.mjs","../node_modules/framer-motion/dist/es/motion/features/gestures.mjs","../node_modules/framer-motion/dist/es/gestures/focus.mjs","../node_modules/framer-motion/dist/es/projection/utils/measure.mjs","../node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/css-variables-conversion.mjs","../node_modules/@babel/runtime/helpers/esm/objectDestructuringEmpty.js","../node_modules/framer-motion/dist/es/render/dom/utils/unit-conversion.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/state.mjs","../node_modules/framer-motion/dist/es/render/store.mjs","../node_modules/framer-motion/dist/es/render/VisualElement.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/index.mjs","../node_modules/framer-motion/dist/es/projection/geometry/models.mjs","../node_modules/framer-motion/dist/es/render/utils/motion-values.mjs","../node_modules/framer-motion/dist/es/render/dom/DOMVisualElement.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/parse-dom-variant.mjs","../node_modules/framer-motion/dist/es/render/html/HTMLVisualElement.mjs","../node_modules/framer-motion/dist/es/render/svg/SVGVisualElement.mjs","../node_modules/@nextui-org/react/node_modules/@nextui-org/ripple/node_modules/@nextui-org/dom-animation/dist/index.mjs","../node_modules/framer-motion/dist/es/render/dom/features-animation.mjs","../node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs"],"sourcesContent":["function shallowCompare(next, prev) {\n    if (!Array.isArray(prev))\n        return false;\n    const prevLength = prev.length;\n    if (prevLength !== next.length)\n        return false;\n    for (let i = 0; i < prevLength; i++) {\n        if (prev[i] !== next[i])\n            return false;\n    }\n    return true;\n}\n\nexport { shallowCompare };\n","import { resolveVariantFromProps } from './resolve-variants.mjs';\n\n/**\n * Creates an object containing the latest state of every MotionValue on a VisualElement\n */\nfunction getCurrent(visualElement) {\n    const current = {};\n    visualElement.values.forEach((value, key) => (current[key] = value.get()));\n    return current;\n}\n/**\n * Creates an object containing the latest velocity of every MotionValue on a VisualElement\n */\nfunction getVelocity(visualElement) {\n    const velocity = {};\n    visualElement.values.forEach((value, key) => (velocity[key] = value.getVelocity()));\n    return velocity;\n}\nfunction resolveVariant(visualElement, definition, custom) {\n    const props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== undefined ? custom : props.custom, getCurrent(visualElement), getVelocity(visualElement));\n}\n\nexport { resolveVariant };\n","/**\n * Converts seconds to milliseconds\n *\n * @param seconds - Time in seconds.\n * @return milliseconds - Converted time in milliseconds.\n */\nconst secondsToMilliseconds = (seconds) => seconds * 1000;\nconst millisecondsToSeconds = (milliseconds) => milliseconds / 1000;\n\nexport { millisecondsToSeconds, secondsToMilliseconds };\n","const instantAnimationState = {\n    current: false,\n};\n\nexport { instantAnimationState };\n","const isBezierDefinition = (easing) => Array.isArray(easing) && typeof easing[0] === \"number\";\n\nexport { isBezierDefinition };\n","import { isBezierDefinition } from '../../../easing/utils/is-bezier-definition.mjs';\n\nfunction isWaapiSupportedEasing(easing) {\n    return Boolean(!easing ||\n        (typeof easing === \"string\" && supportedWaapiEasing[easing]) ||\n        isBezierDefinition(easing) ||\n        (Array.isArray(easing) && easing.every(isWaapiSupportedEasing)));\n}\nconst cubicBezierAsString = ([a, b, c, d]) => `cubic-bezier(${a}, ${b}, ${c}, ${d})`;\nconst supportedWaapiEasing = {\n    linear: \"linear\",\n    ease: \"ease\",\n    easeIn: \"ease-in\",\n    easeOut: \"ease-out\",\n    easeInOut: \"ease-in-out\",\n    circIn: cubicBezierAsString([0, 0.65, 0.55, 1]),\n    circOut: cubicBezierAsString([0.55, 0, 1, 0.45]),\n    backIn: cubicBezierAsString([0.31, 0.01, 0.66, -0.59]),\n    backOut: cubicBezierAsString([0.33, 1.53, 0.69, 0.99]),\n};\nfunction mapEasingToNativeEasing(easing) {\n    if (!easing)\n        return undefined;\n    return isBezierDefinition(easing)\n        ? cubicBezierAsString(easing)\n        : Array.isArray(easing)\n            ? easing.map(mapEasingToNativeEasing)\n            : supportedWaapiEasing[easing];\n}\n\nexport { cubicBezierAsString, isWaapiSupportedEasing, mapEasingToNativeEasing, supportedWaapiEasing };\n","import { noop } from '../utils/noop.mjs';\n\n/*\n  Bezier function generator\n  This has been modified from Gaëtan Renaudeau's BezierEasing\n  https://github.com/gre/bezier-easing/blob/master/src/index.js\n  https://github.com/gre/bezier-easing/blob/master/LICENSE\n  \n  I've removed the newtonRaphsonIterate algo because in benchmarking it\n  wasn't noticiably faster than binarySubdivision, indeed removing it\n  usually improved times, depending on the curve.\n  I also removed the lookup table, as for the added bundle size and loop we're\n  only cutting ~4 or so subdivision iterations. I bumped the max iterations up\n  to 12 to compensate and this still tended to be faster for no perceivable\n  loss in accuracy.\n  Usage\n    const easeOut = cubicBezier(.17,.67,.83,.67);\n    const x = easeOut(0.5); // returns 0.627...\n*/\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nconst calcBezier = (t, a1, a2) => (((1.0 - 3.0 * a2 + 3.0 * a1) * t + (3.0 * a2 - 6.0 * a1)) * t + 3.0 * a1) *\n    t;\nconst subdivisionPrecision = 0.0000001;\nconst subdivisionMaxIterations = 12;\nfunction binarySubdivide(x, lowerBound, upperBound, mX1, mX2) {\n    let currentX;\n    let currentT;\n    let i = 0;\n    do {\n        currentT = lowerBound + (upperBound - lowerBound) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - x;\n        if (currentX > 0.0) {\n            upperBound = currentT;\n        }\n        else {\n            lowerBound = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision &&\n        ++i < subdivisionMaxIterations);\n    return currentT;\n}\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    // If this is a linear gradient, return linear easing\n    if (mX1 === mY1 && mX2 === mY2)\n        return noop;\n    const getTForX = (aX) => binarySubdivide(aX, 0, 1, mX1, mX2);\n    // If animation is at start/end, return t without easing\n    return (t) => t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n}\n\nexport { cubicBezier };\n","import { cubicBezier } from './cubic-bezier.mjs';\n\nconst easeIn = cubicBezier(0.42, 0, 1, 1);\nconst easeOut = cubicBezier(0, 0, 0.58, 1);\nconst easeInOut = cubicBezier(0.42, 0, 0.58, 1);\n\nexport { easeIn, easeInOut, easeOut };\n","// Accepts an easing function and returns a new one that outputs mirrored values for\n// the second half of the animation. Turns easeIn into easeInOut.\nconst mirrorEasing = (easing) => (p) => p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n\nexport { mirrorEasing };\n","// Accepts an easing function and returns a new one that outputs reversed values.\n// Turns easeIn into easeOut.\nconst reverseEasing = (easing) => (p) => 1 - easing(1 - p);\n\nexport { reverseEasing };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst circIn = (p) => 1 - Math.sin(Math.acos(p));\nconst circOut = reverseEasing(circIn);\nconst circInOut = mirrorEasing(circIn);\n\nexport { circIn, circInOut, circOut };\n","import { cubicBezier } from './cubic-bezier.mjs';\nimport { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst backOut = cubicBezier(0.33, 1.53, 0.69, 0.99);\nconst backIn = reverseEasing(backOut);\nconst backInOut = mirrorEasing(backIn);\n\nexport { backIn, backInOut, backOut };\n","import { invariant } from '../../utils/errors.mjs';\nimport { cubicBezier } from '../cubic-bezier.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { easeIn, easeInOut, easeOut } from '../ease.mjs';\nimport { circIn, circInOut, circOut } from '../circ.mjs';\nimport { backIn, backInOut, backOut } from '../back.mjs';\nimport { anticipate } from '../anticipate.mjs';\n\nconst easingLookup = {\n    linear: noop,\n    easeIn,\n    easeInOut,\n    easeOut,\n    circIn,\n    circInOut,\n    circOut,\n    backIn,\n    backInOut,\n    backOut,\n    anticipate,\n};\nconst easingDefinitionToFunction = (definition) => {\n    if (Array.isArray(definition)) {\n        // If cubic bezier definition, create bezier curve\n        invariant(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`);\n        const [x1, y1, x2, y2] = definition;\n        return cubicBezier(x1, y1, x2, y2);\n    }\n    else if (typeof definition === \"string\") {\n        // Else lookup from table\n        invariant(easingLookup[definition] !== undefined, `Invalid easing type '${definition}'`);\n        return easingLookup[definition];\n    }\n    return definition;\n};\n\nexport { easingDefinitionToFunction };\n","import { backIn } from './back.mjs';\n\nconst anticipate = (p) => (p *= 2) < 1 ? 0.5 * backIn(p) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n\nexport { anticipate };\n","import { isString, singleColorRegex, floatRegex } from '../utils.mjs';\n\n/**\n * Returns true if the provided string is a color, ie rgba(0,0,0,0) or #000,\n * but false if a number or multiple colors\n */\nconst isColorString = (type, testProp) => (v) => {\n    return Boolean((isString(v) && singleColorRegex.test(v) && v.startsWith(type)) ||\n        (testProp && Object.prototype.hasOwnProperty.call(v, testProp)));\n};\nconst splitColor = (aName, bName, cName) => (v) => {\n    if (!isString(v))\n        return v;\n    const [a, b, c, alpha] = v.match(floatRegex);\n    return {\n        [aName]: parseFloat(a),\n        [bName]: parseFloat(b),\n        [cName]: parseFloat(c),\n        alpha: alpha !== undefined ? parseFloat(alpha) : 1,\n    };\n};\n\nexport { isColorString, splitColor };\n","import { clamp } from '../../../utils/clamp.mjs';\nimport { number, alpha } from '../numbers/index.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst clampRgbUnit = (v) => clamp(0, 255, v);\nconst rgbUnit = {\n    ...number,\n    transform: (v) => Math.round(clampRgbUnit(v)),\n};\nconst rgba = {\n    test: isColorString(\"rgb\", \"red\"),\n    parse: splitColor(\"red\", \"green\", \"blue\"),\n    transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => \"rgba(\" +\n        rgbUnit.transform(red) +\n        \", \" +\n        rgbUnit.transform(green) +\n        \", \" +\n        rgbUnit.transform(blue) +\n        \", \" +\n        sanitize(alpha.transform(alpha$1)) +\n        \")\",\n};\n\nexport { rgbUnit, rgba };\n","import { rgba } from './rgba.mjs';\nimport { isColorString } from './utils.mjs';\n\nfunction parseHex(v) {\n    let r = \"\";\n    let g = \"\";\n    let b = \"\";\n    let a = \"\";\n    // If we have 6 characters, ie #FF0000\n    if (v.length > 5) {\n        r = v.substring(1, 3);\n        g = v.substring(3, 5);\n        b = v.substring(5, 7);\n        a = v.substring(7, 9);\n        // Or we have 3 characters, ie #F00\n    }\n    else {\n        r = v.substring(1, 2);\n        g = v.substring(2, 3);\n        b = v.substring(3, 4);\n        a = v.substring(4, 5);\n        r += r;\n        g += g;\n        b += b;\n        a += a;\n    }\n    return {\n        red: parseInt(r, 16),\n        green: parseInt(g, 16),\n        blue: parseInt(b, 16),\n        alpha: a ? parseInt(a, 16) / 255 : 1,\n    };\n}\nconst hex = {\n    test: isColorString(\"#\"),\n    parse: parseHex,\n    transform: rgba.transform,\n};\n\nexport { hex };\n","import { alpha } from '../numbers/index.mjs';\nimport { percent } from '../numbers/units.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst hsla = {\n    test: isColorString(\"hsl\", \"hue\"),\n    parse: splitColor(\"hue\", \"saturation\", \"lightness\"),\n    transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => {\n        return (\"hsla(\" +\n            Math.round(hue) +\n            \", \" +\n            percent.transform(sanitize(saturation)) +\n            \", \" +\n            percent.transform(sanitize(lightness)) +\n            \", \" +\n            sanitize(alpha.transform(alpha$1)) +\n            \")\");\n    },\n};\n\nexport { hsla };\n","import { isString } from '../utils.mjs';\nimport { hex } from './hex.mjs';\nimport { hsla } from './hsla.mjs';\nimport { rgba } from './rgba.mjs';\n\nconst color = {\n    test: (v) => rgba.test(v) || hex.test(v) || hsla.test(v),\n    parse: (v) => {\n        if (rgba.test(v)) {\n            return rgba.parse(v);\n        }\n        else if (hsla.test(v)) {\n            return hsla.parse(v);\n        }\n        else {\n            return hex.parse(v);\n        }\n    },\n    transform: (v) => {\n        return isString(v)\n            ? v\n            : v.hasOwnProperty(\"red\")\n                ? rgba.transform(v)\n                : hsla.transform(v);\n    },\n};\n\nexport { color };\n","/*\n  Value in range from progress\n\n  Given a lower limit and an upper limit, we return the value within\n  that range as expressed by progress (usually a number from 0 to 1)\n\n  So progress = 0.5 would change\n\n  from -------- to\n\n  to\n\n  from ---- to\n\n  E.g. from = 10, to = 20, progress = 0.5 => 15\n\n  @param [number]: Lower limit of range\n  @param [number]: Upper limit of range\n  @param [number]: The progress between lower and upper limits expressed 0-1\n  @return [number]: Value as calculated from progress within range (not limited within range)\n*/\nconst mix = (from, to, progress) => -progress * from + progress * to + from;\n\nexport { mix };\n","// Adapted from https://gist.github.com/mjackson/5311256\nfunction hueToRgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\nfunction hslaToRgba({ hue, saturation, lightness, alpha }) {\n    hue /= 360;\n    saturation /= 100;\n    lightness /= 100;\n    let red = 0;\n    let green = 0;\n    let blue = 0;\n    if (!saturation) {\n        red = green = blue = lightness;\n    }\n    else {\n        const q = lightness < 0.5\n            ? lightness * (1 + saturation)\n            : lightness + saturation - lightness * saturation;\n        const p = 2 * lightness - q;\n        red = hueToRgb(p, q, hue + 1 / 3);\n        green = hueToRgb(p, q, hue);\n        blue = hueToRgb(p, q, hue - 1 / 3);\n    }\n    return {\n        red: Math.round(red * 255),\n        green: Math.round(green * 255),\n        blue: Math.round(blue * 255),\n        alpha,\n    };\n}\n\nexport { hslaToRgba };\n","import { mix } from './mix.mjs';\nimport { invariant } from './errors.mjs';\nimport { hslaToRgba } from './hsla-to-rgba.mjs';\nimport { hex } from '../value/types/color/hex.mjs';\nimport { rgba } from '../value/types/color/rgba.mjs';\nimport { hsla } from '../value/types/color/hsla.mjs';\n\n// Linear color space blending\n// Explained https://www.youtube.com/watch?v=LKnqECcg6Gw\n// Demonstrated http://codepen.io/osublake/pen/xGVVaN\nconst mixLinearColor = (from, to, v) => {\n    const fromExpo = from * from;\n    return Math.sqrt(Math.max(0, v * (to * to - fromExpo) + fromExpo));\n};\nconst colorTypes = [hex, rgba, hsla];\nconst getColorType = (v) => colorTypes.find((type) => type.test(v));\nfunction asRGBA(color) {\n    const type = getColorType(color);\n    invariant(Boolean(type), `'${color}' is not an animatable color. Use the equivalent color code instead.`);\n    let model = type.parse(color);\n    if (type === hsla) {\n        // TODO Remove this cast - needed since Framer Motion's stricter typing\n        model = hslaToRgba(model);\n    }\n    return model;\n}\nconst mixColor = (from, to) => {\n    const fromRGBA = asRGBA(from);\n    const toRGBA = asRGBA(to);\n    const blended = { ...fromRGBA };\n    return (v) => {\n        blended.red = mixLinearColor(fromRGBA.red, toRGBA.red, v);\n        blended.green = mixLinearColor(fromRGBA.green, toRGBA.green, v);\n        blended.blue = mixLinearColor(fromRGBA.blue, toRGBA.blue, v);\n        blended.alpha = mix(fromRGBA.alpha, toRGBA.alpha, v);\n        return rgba.transform(blended);\n    };\n};\n\nexport { mixColor, mixLinearColor };\n","/**\n * Pipe\n * Compose other transformers to run linearily\n * pipe(min(20), max(40))\n * @param  {...functions} transformers\n * @return {function}\n */\nconst combineFunctions = (a, b) => (v) => b(a(v));\nconst pipe = (...transformers) => transformers.reduce(combineFunctions);\n\nexport { pipe };\n","import { cssVariableRegex } from '../../../render/dom/utils/is-css-variable.mjs';\nimport { noop } from '../../../utils/noop.mjs';\nimport { color } from '../color/index.mjs';\nimport { number } from '../numbers/index.mjs';\nimport { colorRegex, floatRegex, isString, sanitize } from '../utils.mjs';\n\nfunction test(v) {\n    var _a, _b;\n    return (isNaN(v) &&\n        isString(v) &&\n        (((_a = v.match(floatRegex)) === null || _a === void 0 ? void 0 : _a.length) || 0) +\n            (((_b = v.match(colorRegex)) === null || _b === void 0 ? void 0 : _b.length) || 0) >\n            0);\n}\nconst cssVarTokeniser = {\n    regex: cssVariableRegex,\n    countKey: \"Vars\",\n    token: \"${v}\",\n    parse: noop,\n};\nconst colorTokeniser = {\n    regex: colorRegex,\n    countKey: \"Colors\",\n    token: \"${c}\",\n    parse: color.parse,\n};\nconst numberTokeniser = {\n    regex: floatRegex,\n    countKey: \"Numbers\",\n    token: \"${n}\",\n    parse: number.parse,\n};\nfunction tokenise(info, { regex, countKey, token, parse }) {\n    const matches = info.tokenised.match(regex);\n    if (!matches)\n        return;\n    info[\"num\" + countKey] = matches.length;\n    info.tokenised = info.tokenised.replace(regex, token);\n    info.values.push(...matches.map(parse));\n}\nfunction analyseComplexValue(value) {\n    const originalValue = value.toString();\n    const info = {\n        value: originalValue,\n        tokenised: originalValue,\n        values: [],\n        numVars: 0,\n        numColors: 0,\n        numNumbers: 0,\n    };\n    if (info.value.includes(\"var(--\"))\n        tokenise(info, cssVarTokeniser);\n    tokenise(info, colorTokeniser);\n    tokenise(info, numberTokeniser);\n    return info;\n}\nfunction parseComplexValue(v) {\n    return analyseComplexValue(v).values;\n}\nfunction createTransformer(source) {\n    const { values, numColors, numVars, tokenised } = analyseComplexValue(source);\n    const numValues = values.length;\n    return (v) => {\n        let output = tokenised;\n        for (let i = 0; i < numValues; i++) {\n            if (i < numVars) {\n                output = output.replace(cssVarTokeniser.token, v[i]);\n            }\n            else if (i < numVars + numColors) {\n                output = output.replace(colorTokeniser.token, color.transform(v[i]));\n            }\n            else {\n                output = output.replace(numberTokeniser.token, sanitize(v[i]));\n            }\n        }\n        return output;\n    };\n}\nconst convertNumbersToZero = (v) => typeof v === \"number\" ? 0 : v;\nfunction getAnimatableNone(v) {\n    const parsed = parseComplexValue(v);\n    const transformer = createTransformer(v);\n    return transformer(parsed.map(convertNumbersToZero));\n}\nconst complex = {\n    test,\n    parse: parseComplexValue,\n    createTransformer,\n    getAnimatableNone,\n};\n\nexport { analyseComplexValue, complex };\n","import { mix } from './mix.mjs';\nimport { mixColor } from './mix-color.mjs';\nimport { pipe } from './pipe.mjs';\nimport { warning } from './errors.mjs';\nimport { color } from '../value/types/color/index.mjs';\nimport { complex, analyseComplexValue } from '../value/types/complex/index.mjs';\n\nconst mixImmediate = (origin, target) => (p) => `${p > 0 ? target : origin}`;\nfunction getMixer(origin, target) {\n    if (typeof origin === \"number\") {\n        return (v) => mix(origin, target, v);\n    }\n    else if (color.test(origin)) {\n        return mixColor(origin, target);\n    }\n    else {\n        return origin.startsWith(\"var(\")\n            ? mixImmediate(origin, target)\n            : mixComplex(origin, target);\n    }\n}\nconst mixArray = (from, to) => {\n    const output = [...from];\n    const numValues = output.length;\n    const blendValue = from.map((fromThis, i) => getMixer(fromThis, to[i]));\n    return (v) => {\n        for (let i = 0; i < numValues; i++) {\n            output[i] = blendValue[i](v);\n        }\n        return output;\n    };\n};\nconst mixObject = (origin, target) => {\n    const output = { ...origin, ...target };\n    const blendValue = {};\n    for (const key in output) {\n        if (origin[key] !== undefined && target[key] !== undefined) {\n            blendValue[key] = getMixer(origin[key], target[key]);\n        }\n    }\n    return (v) => {\n        for (const key in blendValue) {\n            output[key] = blendValue[key](v);\n        }\n        return output;\n    };\n};\nconst mixComplex = (origin, target) => {\n    const template = complex.createTransformer(target);\n    const originStats = analyseComplexValue(origin);\n    const targetStats = analyseComplexValue(target);\n    const canInterpolate = originStats.numVars === targetStats.numVars &&\n        originStats.numColors === targetStats.numColors &&\n        originStats.numNumbers >= targetStats.numNumbers;\n    if (canInterpolate) {\n        return pipe(mixArray(originStats.values, targetStats.values), template);\n    }\n    else {\n        warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`);\n        return mixImmediate(origin, target);\n    }\n};\n\nexport { mixArray, mixComplex, mixObject };\n","/*\n  Progress within given range\n\n  Given a lower limit and an upper limit, we return the progress\n  (expressed as a number 0-1) represented by the given value, and\n  limit that progress to within 0-1.\n\n  @param [number]: Lower limit\n  @param [number]: Upper limit\n  @param [number]: Value to find progress within given range\n  @return [number]: Progress of value within range as expressed 0-1\n*/\nconst progress = (from, to, value) => {\n    const toFromDifference = to - from;\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\n\nexport { progress };\n","import { invariant } from './errors.mjs';\nimport { color } from '../value/types/color/index.mjs';\nimport { clamp } from './clamp.mjs';\nimport { mix } from './mix.mjs';\nimport { mixColor } from './mix-color.mjs';\nimport { mixComplex, mixArray, mixObject } from './mix-complex.mjs';\nimport { pipe } from './pipe.mjs';\nimport { progress } from './progress.mjs';\nimport { noop } from './noop.mjs';\n\nconst mixNumber = (from, to) => (p) => mix(from, to, p);\nfunction detectMixerFactory(v) {\n    if (typeof v === \"number\") {\n        return mixNumber;\n    }\n    else if (typeof v === \"string\") {\n        return color.test(v) ? mixColor : mixComplex;\n    }\n    else if (Array.isArray(v)) {\n        return mixArray;\n    }\n    else if (typeof v === \"object\") {\n        return mixObject;\n    }\n    return mixNumber;\n}\nfunction createMixers(output, ease, customMixer) {\n    const mixers = [];\n    const mixerFactory = customMixer || detectMixerFactory(output[0]);\n    const numMixers = output.length - 1;\n    for (let i = 0; i < numMixers; i++) {\n        let mixer = mixerFactory(output[i], output[i + 1]);\n        if (ease) {\n            const easingFunction = Array.isArray(ease) ? ease[i] || noop : ease;\n            mixer = pipe(easingFunction, mixer);\n        }\n        mixers.push(mixer);\n    }\n    return mixers;\n}\n/**\n * Create a function that maps from a numerical input array to a generic output array.\n *\n * Accepts:\n *   - Numbers\n *   - Colors (hex, hsl, hsla, rgb, rgba)\n *   - Complex (combinations of one or more numbers or strings)\n *\n * ```jsx\n * const mixColor = interpolate([0, 1], ['#fff', '#000'])\n *\n * mixColor(0.5) // 'rgba(128, 128, 128, 1)'\n * ```\n *\n * TODO Revist this approach once we've moved to data models for values,\n * probably not needed to pregenerate mixer functions.\n *\n * @public\n */\nfunction interpolate(input, output, { clamp: isClamp = true, ease, mixer } = {}) {\n    const inputLength = input.length;\n    invariant(inputLength === output.length, \"Both input and output ranges must be the same length\");\n    /**\n     * If we're only provided a single input, we can just make a function\n     * that returns the output.\n     */\n    if (inputLength === 1)\n        return () => output[0];\n    // If input runs highest -> lowest, reverse both arrays\n    if (input[0] > input[inputLength - 1]) {\n        input = [...input].reverse();\n        output = [...output].reverse();\n    }\n    const mixers = createMixers(output, ease, mixer);\n    const numMixers = mixers.length;\n    const interpolator = (v) => {\n        let i = 0;\n        if (numMixers > 1) {\n            for (; i < input.length - 2; i++) {\n                if (v < input[i + 1])\n                    break;\n            }\n        }\n        const progressInRange = progress(input[i], input[i + 1], v);\n        return mixers[i](progressInRange);\n    };\n    return isClamp\n        ? (v) => interpolator(clamp(input[0], input[inputLength - 1], v))\n        : interpolator;\n}\n\nexport { interpolate };\n","import { fillOffset } from './fill.mjs';\n\nfunction defaultOffset(arr) {\n    const offset = [0];\n    fillOffset(offset, arr.length - 1);\n    return offset;\n}\n\nexport { defaultOffset };\n","import { mix } from '../mix.mjs';\nimport { progress } from '../progress.mjs';\n\nfunction fillOffset(offset, remaining) {\n    const min = offset[offset.length - 1];\n    for (let i = 1; i <= remaining; i++) {\n        const offsetProgress = progress(0, remaining, i);\n        offset.push(mix(min, 1, offsetProgress));\n    }\n}\n\nexport { fillOffset };\n","import { easeInOut } from '../../easing/ease.mjs';\nimport { isEasingArray } from '../../easing/utils/is-easing-array.mjs';\nimport { easingDefinitionToFunction } from '../../easing/utils/map.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\nimport { defaultOffset } from '../../utils/offsets/default.mjs';\nimport { convertOffsetToTimes } from '../../utils/offsets/time.mjs';\n\nfunction defaultEasing(values, easing) {\n    return values.map(() => easing || easeInOut).splice(0, values.length - 1);\n}\nfunction keyframes({ duration = 300, keyframes: keyframeValues, times, ease = \"easeInOut\", }) {\n    /**\n     * Easing functions can be externally defined as strings. Here we convert them\n     * into actual functions.\n     */\n    const easingFunctions = isEasingArray(ease)\n        ? ease.map(easingDefinitionToFunction)\n        : easingDefinitionToFunction(ease);\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = {\n        done: false,\n        value: keyframeValues[0],\n    };\n    /**\n     * Create a times array based on the provided 0-1 offsets\n     */\n    const absoluteTimes = convertOffsetToTimes(\n    // Only use the provided offsets if they're the correct length\n    // TODO Maybe we should warn here if there's a length mismatch\n    times && times.length === keyframeValues.length\n        ? times\n        : defaultOffset(keyframeValues), duration);\n    const mapTimeToKeyframe = interpolate(absoluteTimes, keyframeValues, {\n        ease: Array.isArray(easingFunctions)\n            ? easingFunctions\n            : defaultEasing(keyframeValues, easingFunctions),\n    });\n    return {\n        calculatedDuration: duration,\n        next: (t) => {\n            state.value = mapTimeToKeyframe(t);\n            state.done = t >= duration;\n            return state;\n        },\n    };\n}\n\nexport { defaultEasing, keyframes };\n","const isEasingArray = (ease) => {\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\n};\n\nexport { isEasingArray };\n","function convertOffsetToTimes(offset, duration) {\n    return offset.map((o) => o * duration);\n}\n\nexport { convertOffsetToTimes };\n","/*\n  Convert velocity into velocity per second\n\n  @param [number]: Unit per frame\n  @param [number]: Frame duration in ms\n*/\nfunction velocityPerSecond(velocity, frameDuration) {\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\n}\n\nexport { velocityPerSecond };\n","import { velocityPerSecond } from '../../../utils/velocity-per-second.mjs';\n\nconst velocitySampleDuration = 5; // ms\nfunction calcGeneratorVelocity(resolveValue, t, current) {\n    const prevT = Math.max(t - velocitySampleDuration, 0);\n    return velocityPerSecond(current - resolveValue(prevT), t - prevT);\n}\n\nexport { calcGeneratorVelocity };\n","import { warning } from '../../../utils/errors.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\n\nconst safeMin = 0.001;\nconst minDuration = 0.01;\nconst maxDuration = 10.0;\nconst minDamping = 0.05;\nconst maxDamping = 1;\nfunction findSpring({ duration = 800, bounce = 0.25, velocity = 0, mass = 1, }) {\n    let envelope;\n    let derivative;\n    warning(duration <= secondsToMilliseconds(maxDuration), \"Spring duration must be 10 seconds or less\");\n    let dampingRatio = 1 - bounce;\n    /**\n     * Restrict dampingRatio and duration to within acceptable ranges.\n     */\n    dampingRatio = clamp(minDamping, maxDamping, dampingRatio);\n    duration = clamp(minDuration, maxDuration, millisecondsToSeconds(duration));\n    if (dampingRatio < 1) {\n        /**\n         * Underdamped spring\n         */\n        envelope = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const a = exponentialDecay - velocity;\n            const b = calcAngularFreq(undampedFreq, dampingRatio);\n            const c = Math.exp(-delta);\n            return safeMin - (a / b) * c;\n        };\n        derivative = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const d = delta * velocity + velocity;\n            const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n            const f = Math.exp(-delta);\n            const g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n            const factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n            return (factor * ((d - e) * f)) / g;\n        };\n    }\n    else {\n        /**\n         * Critically-damped spring\n         */\n        envelope = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (undampedFreq - velocity) * duration + 1;\n            return -safeMin + a * b;\n        };\n        derivative = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (velocity - undampedFreq) * (duration * duration);\n            return a * b;\n        };\n    }\n    const initialGuess = 5 / duration;\n    const undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n    duration = secondsToMilliseconds(duration);\n    if (isNaN(undampedFreq)) {\n        return {\n            stiffness: 100,\n            damping: 10,\n            duration,\n        };\n    }\n    else {\n        const stiffness = Math.pow(undampedFreq, 2) * mass;\n        return {\n            stiffness,\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n            duration,\n        };\n    }\n}\nconst rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n    let result = initialGuess;\n    for (let i = 1; i < rootIterations; i++) {\n        result = result - envelope(result) / derivative(result);\n    }\n    return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nexport { calcAngularFreq, findSpring, maxDamping, maxDuration, minDamping, minDuration };\n","import { millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\nimport { calcGeneratorVelocity } from '../utils/velocity.mjs';\nimport { findSpring, calcAngularFreq } from './find.mjs';\n\nconst durationKeys = [\"duration\", \"bounce\"];\nconst physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\nfunction isSpringType(options, keys) {\n    return keys.some((key) => options[key] !== undefined);\n}\nfunction getSpringOptions(options) {\n    let springOptions = {\n        velocity: 0.0,\n        stiffness: 100,\n        damping: 10,\n        mass: 1.0,\n        isResolvedFromDuration: false,\n        ...options,\n    };\n    // stiffness/damping/mass overrides duration/bounce\n    if (!isSpringType(options, physicsKeys) &&\n        isSpringType(options, durationKeys)) {\n        const derived = findSpring(options);\n        springOptions = {\n            ...springOptions,\n            ...derived,\n            mass: 1.0,\n        };\n        springOptions.isResolvedFromDuration = true;\n    }\n    return springOptions;\n}\nfunction spring({ keyframes, restDelta, restSpeed, ...options }) {\n    const origin = keyframes[0];\n    const target = keyframes[keyframes.length - 1];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    const { stiffness, damping, mass, duration, velocity, isResolvedFromDuration, } = getSpringOptions({\n        ...options,\n        velocity: -millisecondsToSeconds(options.velocity || 0),\n    });\n    const initialVelocity = velocity || 0.0;\n    const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n    const initialDelta = target - origin;\n    const undampedAngularFreq = millisecondsToSeconds(Math.sqrt(stiffness / mass));\n    /**\n     * If we're working on a granular scale, use smaller defaults for determining\n     * when the spring is finished.\n     *\n     * These defaults have been selected emprically based on what strikes a good\n     * ratio between feeling good and finishing as soon as changes are imperceptible.\n     */\n    const isGranularScale = Math.abs(initialDelta) < 5;\n    restSpeed || (restSpeed = isGranularScale ? 0.01 : 2);\n    restDelta || (restDelta = isGranularScale ? 0.005 : 0.5);\n    let resolveSpring;\n    if (dampingRatio < 1) {\n        const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);\n        // Underdamped spring\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            return (target -\n                envelope *\n                    (((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) /\n                        angularFreq) *\n                        Math.sin(angularFreq * t) +\n                        initialDelta * Math.cos(angularFreq * t)));\n        };\n    }\n    else if (dampingRatio === 1) {\n        // Critically damped spring\n        resolveSpring = (t) => target -\n            Math.exp(-undampedAngularFreq * t) *\n                (initialDelta +\n                    (initialVelocity + undampedAngularFreq * initialDelta) * t);\n    }\n    else {\n        // Overdamped spring\n        const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            // When performing sinh or cosh values can hit Infinity so we cap them here\n            const freqForT = Math.min(dampedAngularFreq * t, 300);\n            return (target -\n                (envelope *\n                    ((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) *\n                        Math.sinh(freqForT) +\n                        dampedAngularFreq *\n                            initialDelta *\n                            Math.cosh(freqForT))) /\n                    dampedAngularFreq);\n        };\n    }\n    return {\n        calculatedDuration: isResolvedFromDuration ? duration || null : null,\n        next: (t) => {\n            const current = resolveSpring(t);\n            if (!isResolvedFromDuration) {\n                let currentVelocity = initialVelocity;\n                if (t !== 0) {\n                    /**\n                     * We only need to calculate velocity for under-damped springs\n                     * as over- and critically-damped springs can't overshoot, so\n                     * checking only for displacement is enough.\n                     */\n                    if (dampingRatio < 1) {\n                        currentVelocity = calcGeneratorVelocity(resolveSpring, t, current);\n                    }\n                    else {\n                        currentVelocity = 0;\n                    }\n                }\n                const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n                const isBelowDisplacementThreshold = Math.abs(target - current) <= restDelta;\n                state.done =\n                    isBelowVelocityThreshold && isBelowDisplacementThreshold;\n            }\n            else {\n                state.done = t >= duration;\n            }\n            state.value = state.done ? target : current;\n            return state;\n        },\n    };\n}\n\nexport { spring };\n","import { spring } from './spring/index.mjs';\nimport { calcGeneratorVelocity } from './utils/velocity.mjs';\n\nfunction inertia({ keyframes, velocity = 0.0, power = 0.8, timeConstant = 325, bounceDamping = 10, bounceStiffness = 500, modifyTarget, min, max, restDelta = 0.5, restSpeed, }) {\n    const origin = keyframes[0];\n    const state = {\n        done: false,\n        value: origin,\n    };\n    const isOutOfBounds = (v) => (min !== undefined && v < min) || (max !== undefined && v > max);\n    const nearestBoundary = (v) => {\n        if (min === undefined)\n            return max;\n        if (max === undefined)\n            return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    };\n    let amplitude = power * velocity;\n    const ideal = origin + amplitude;\n    const target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n    /**\n     * If the target has changed we need to re-calculate the amplitude, otherwise\n     * the animation will start from the wrong position.\n     */\n    if (target !== ideal)\n        amplitude = target - origin;\n    const calcDelta = (t) => -amplitude * Math.exp(-t / timeConstant);\n    const calcLatest = (t) => target + calcDelta(t);\n    const applyFriction = (t) => {\n        const delta = calcDelta(t);\n        const latest = calcLatest(t);\n        state.done = Math.abs(delta) <= restDelta;\n        state.value = state.done ? target : latest;\n    };\n    /**\n     * Ideally this would resolve for t in a stateless way, we could\n     * do that by always precalculating the animation but as we know\n     * this will be done anyway we can assume that spring will\n     * be discovered during that.\n     */\n    let timeReachedBoundary;\n    let spring$1;\n    const checkCatchBoundary = (t) => {\n        if (!isOutOfBounds(state.value))\n            return;\n        timeReachedBoundary = t;\n        spring$1 = spring({\n            keyframes: [state.value, nearestBoundary(state.value)],\n            velocity: calcGeneratorVelocity(calcLatest, t, state.value),\n            damping: bounceDamping,\n            stiffness: bounceStiffness,\n            restDelta,\n            restSpeed,\n        });\n    };\n    checkCatchBoundary(0);\n    return {\n        calculatedDuration: null,\n        next: (t) => {\n            /**\n             * We need to resolve the friction to figure out if we need a\n             * spring but we don't want to do this twice per frame. So here\n             * we flag if we updated for this frame and later if we did\n             * we can skip doing it again.\n             */\n            let hasUpdatedFrame = false;\n            if (!spring$1 && timeReachedBoundary === undefined) {\n                hasUpdatedFrame = true;\n                applyFriction(t);\n                checkCatchBoundary(t);\n            }\n            /**\n             * If we have a spring and the provided t is beyond the moment the friction\n             * animation crossed the min/max boundary, use the spring.\n             */\n            if (timeReachedBoundary !== undefined && t > timeReachedBoundary) {\n                return spring$1.next(t - timeReachedBoundary);\n            }\n            else {\n                !hasUpdatedFrame && applyFriction(t);\n                return state;\n            }\n        },\n    };\n}\n\nexport { inertia };\n","import { frame, cancelFrame, frameData } from '../../../frameloop/frame.mjs';\n\nconst frameloopDriver = (update) => {\n    const passTimestamp = ({ timestamp }) => update(timestamp);\n    return {\n        start: () => frame.update(passTimestamp, true),\n        stop: () => cancelFrame(passTimestamp),\n        /**\n         * If we're processing this frame we can use the\n         * framelocked timestamp to keep things in sync.\n         */\n        now: () => frameData.isProcessing ? frameData.timestamp : performance.now(),\n    };\n};\n\nexport { frameloopDriver };\n","/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxGeneratorDuration = 20000;\nfunction calcGeneratorDuration(generator) {\n    let duration = 0;\n    const timeStep = 50;\n    let state = generator.next(duration);\n    while (!state.done && duration < maxGeneratorDuration) {\n        duration += timeStep;\n        state = generator.next(duration);\n    }\n    return duration >= maxGeneratorDuration ? Infinity : duration;\n}\n\nexport { calcGeneratorDuration, maxGeneratorDuration };\n","import { keyframes } from '../../generators/keyframes.mjs';\nimport { spring } from '../../generators/spring/index.mjs';\nimport { inertia } from '../../generators/inertia.mjs';\nimport { frameloopDriver } from './driver-frameloop.mjs';\nimport { interpolate } from '../../../utils/interpolate.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../../utils/time-conversion.mjs';\nimport { calcGeneratorDuration } from '../../generators/utils/calc-duration.mjs';\nimport { invariant } from '../../../utils/errors.mjs';\n\nconst types = {\n    decay: inertia,\n    inertia,\n    tween: keyframes,\n    keyframes: keyframes,\n    spring,\n};\n/**\n * Animate a single value on the main thread.\n *\n * This function is written, where functionality overlaps,\n * to be largely spec-compliant with WAAPI to allow fungibility\n * between the two.\n */\nfunction animateValue({ autoplay = true, delay = 0, driver = frameloopDriver, keyframes: keyframes$1, type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType = \"loop\", onPlay, onStop, onComplete, onUpdate, ...options }) {\n    let speed = 1;\n    let hasStopped = false;\n    let resolveFinishedPromise;\n    let currentFinishedPromise;\n    /**\n     * Resolve the current Promise every time we enter the\n     * finished state. This is WAAPI-compatible behaviour.\n     */\n    const updateFinishedPromise = () => {\n        currentFinishedPromise = new Promise((resolve) => {\n            resolveFinishedPromise = resolve;\n        });\n    };\n    // Create the first finished promise\n    updateFinishedPromise();\n    let animationDriver;\n    const generatorFactory = types[type] || keyframes;\n    /**\n     * If this isn't the keyframes generator and we've been provided\n     * strings as keyframes, we need to interpolate these.\n     */\n    let mapNumbersToKeyframes;\n    if (generatorFactory !== keyframes &&\n        typeof keyframes$1[0] !== \"number\") {\n        if (process.env.NODE_ENV !== \"production\") {\n            invariant(keyframes$1.length === 2, `Only two keyframes currently supported with spring and inertia animations. Trying to animate ${keyframes$1}`);\n        }\n        mapNumbersToKeyframes = interpolate([0, 100], keyframes$1, {\n            clamp: false,\n        });\n        keyframes$1 = [0, 100];\n    }\n    const generator = generatorFactory({ ...options, keyframes: keyframes$1 });\n    let mirroredGenerator;\n    if (repeatType === \"mirror\") {\n        mirroredGenerator = generatorFactory({\n            ...options,\n            keyframes: [...keyframes$1].reverse(),\n            velocity: -(options.velocity || 0),\n        });\n    }\n    let playState = \"idle\";\n    let holdTime = null;\n    let startTime = null;\n    let cancelTime = null;\n    /**\n     * If duration is undefined and we have repeat options,\n     * we need to calculate a duration from the generator.\n     *\n     * We set it to the generator itself to cache the duration.\n     * Any timeline resolver will need to have already precalculated\n     * the duration by this step.\n     */\n    if (generator.calculatedDuration === null && repeat) {\n        generator.calculatedDuration = calcGeneratorDuration(generator);\n    }\n    const { calculatedDuration } = generator;\n    let resolvedDuration = Infinity;\n    let totalDuration = Infinity;\n    if (calculatedDuration !== null) {\n        resolvedDuration = calculatedDuration + repeatDelay;\n        totalDuration = resolvedDuration * (repeat + 1) - repeatDelay;\n    }\n    let currentTime = 0;\n    const tick = (timestamp) => {\n        if (startTime === null)\n            return;\n        /**\n         * requestAnimationFrame timestamps can come through as lower than\n         * the startTime as set by performance.now(). Here we prevent this,\n         * though in the future it could be possible to make setting startTime\n         * a pending operation that gets resolved here.\n         */\n        if (speed > 0)\n            startTime = Math.min(startTime, timestamp);\n        if (speed < 0)\n            startTime = Math.min(timestamp - totalDuration / speed, startTime);\n        if (holdTime !== null) {\n            currentTime = holdTime;\n        }\n        else {\n            // Rounding the time because floating point arithmetic is not always accurate, e.g. 3000.367 - 1000.367 =\n            // 2000.0000000000002. This is a problem when we are comparing the currentTime with the duration, for\n            // example.\n            currentTime = Math.round(timestamp - startTime) * speed;\n        }\n        // Rebase on delay\n        const timeWithoutDelay = currentTime - delay * (speed >= 0 ? 1 : -1);\n        const isInDelayPhase = speed >= 0 ? timeWithoutDelay < 0 : timeWithoutDelay > totalDuration;\n        currentTime = Math.max(timeWithoutDelay, 0);\n        /**\n         * If this animation has finished, set the current time\n         * to the total duration.\n         */\n        if (playState === \"finished\" && holdTime === null) {\n            currentTime = totalDuration;\n        }\n        let elapsed = currentTime;\n        let frameGenerator = generator;\n        if (repeat) {\n            /**\n             * Get the current progress (0-1) of the animation. If t is >\n             * than duration we'll get values like 2.5 (midway through the\n             * third iteration)\n             */\n            const progress = Math.min(currentTime, totalDuration) / resolvedDuration;\n            /**\n             * Get the current iteration (0 indexed). For instance the floor of\n             * 2.5 is 2.\n             */\n            let currentIteration = Math.floor(progress);\n            /**\n             * Get the current progress of the iteration by taking the remainder\n             * so 2.5 is 0.5 through iteration 2\n             */\n            let iterationProgress = progress % 1.0;\n            /**\n             * If iteration progress is 1 we count that as the end\n             * of the previous iteration.\n             */\n            if (!iterationProgress && progress >= 1) {\n                iterationProgress = 1;\n            }\n            iterationProgress === 1 && currentIteration--;\n            currentIteration = Math.min(currentIteration, repeat + 1);\n            /**\n             * Reverse progress if we're not running in \"normal\" direction\n             */\n            const isOddIteration = Boolean(currentIteration % 2);\n            if (isOddIteration) {\n                if (repeatType === \"reverse\") {\n                    iterationProgress = 1 - iterationProgress;\n                    if (repeatDelay) {\n                        iterationProgress -= repeatDelay / resolvedDuration;\n                    }\n                }\n                else if (repeatType === \"mirror\") {\n                    frameGenerator = mirroredGenerator;\n                }\n            }\n            elapsed = clamp(0, 1, iterationProgress) * resolvedDuration;\n        }\n        /**\n         * If we're in negative time, set state as the initial keyframe.\n         * This prevents delay: x, duration: 0 animations from finishing\n         * instantly.\n         */\n        const state = isInDelayPhase\n            ? { done: false, value: keyframes$1[0] }\n            : frameGenerator.next(elapsed);\n        if (mapNumbersToKeyframes) {\n            state.value = mapNumbersToKeyframes(state.value);\n        }\n        let { done } = state;\n        if (!isInDelayPhase && calculatedDuration !== null) {\n            done = speed >= 0 ? currentTime >= totalDuration : currentTime <= 0;\n        }\n        const isAnimationFinished = holdTime === null &&\n            (playState === \"finished\" || (playState === \"running\" && done));\n        if (onUpdate) {\n            onUpdate(state.value);\n        }\n        if (isAnimationFinished) {\n            finish();\n        }\n        return state;\n    };\n    const stopAnimationDriver = () => {\n        animationDriver && animationDriver.stop();\n        animationDriver = undefined;\n    };\n    const cancel = () => {\n        playState = \"idle\";\n        stopAnimationDriver();\n        resolveFinishedPromise();\n        updateFinishedPromise();\n        startTime = cancelTime = null;\n    };\n    const finish = () => {\n        playState = \"finished\";\n        onComplete && onComplete();\n        stopAnimationDriver();\n        resolveFinishedPromise();\n    };\n    const play = () => {\n        if (hasStopped)\n            return;\n        if (!animationDriver)\n            animationDriver = driver(tick);\n        const now = animationDriver.now();\n        onPlay && onPlay();\n        if (holdTime !== null) {\n            startTime = now - holdTime;\n        }\n        else if (!startTime || playState === \"finished\") {\n            startTime = now;\n        }\n        if (playState === \"finished\") {\n            updateFinishedPromise();\n        }\n        cancelTime = startTime;\n        holdTime = null;\n        /**\n         * Set playState to running only after we've used it in\n         * the previous logic.\n         */\n        playState = \"running\";\n        animationDriver.start();\n    };\n    if (autoplay) {\n        play();\n    }\n    const controls = {\n        then(resolve, reject) {\n            return currentFinishedPromise.then(resolve, reject);\n        },\n        get time() {\n            return millisecondsToSeconds(currentTime);\n        },\n        set time(newTime) {\n            newTime = secondsToMilliseconds(newTime);\n            currentTime = newTime;\n            if (holdTime !== null || !animationDriver || speed === 0) {\n                holdTime = newTime;\n            }\n            else {\n                startTime = animationDriver.now() - newTime / speed;\n            }\n        },\n        get duration() {\n            const duration = generator.calculatedDuration === null\n                ? calcGeneratorDuration(generator)\n                : generator.calculatedDuration;\n            return millisecondsToSeconds(duration);\n        },\n        get speed() {\n            return speed;\n        },\n        set speed(newSpeed) {\n            if (newSpeed === speed || !animationDriver)\n                return;\n            speed = newSpeed;\n            controls.time = millisecondsToSeconds(currentTime);\n        },\n        get state() {\n            return playState;\n        },\n        play,\n        pause: () => {\n            playState = \"paused\";\n            holdTime = currentTime;\n        },\n        stop: () => {\n            hasStopped = true;\n            if (playState === \"idle\")\n                return;\n            playState = \"idle\";\n            onStop && onStop();\n            cancel();\n        },\n        cancel: () => {\n            if (cancelTime !== null)\n                tick(cancelTime);\n            cancel();\n        },\n        complete: () => {\n            playState = \"finished\";\n        },\n        sample: (elapsed) => {\n            startTime = 0;\n            return tick(elapsed);\n        },\n    };\n    return controls;\n}\n\nexport { animateValue };\n","import { animateStyle } from './index.mjs';\nimport { isWaapiSupportedEasing } from './easing.mjs';\nimport { getFinalKeyframe } from './utils/get-final-keyframe.mjs';\nimport { animateValue } from '../js/index.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../../utils/time-conversion.mjs';\nimport { memo } from '../../../utils/memo.mjs';\nimport { noop } from '../../../utils/noop.mjs';\nimport { frame, cancelFrame } from '../../../frameloop/frame.mjs';\n\nconst supportsWaapi = memo(() => Object.hasOwnProperty.call(Element.prototype, \"animate\"));\n/**\n * A list of values that can be hardware-accelerated.\n */\nconst acceleratedValues = new Set([\n    \"opacity\",\n    \"clipPath\",\n    \"filter\",\n    \"transform\",\n    \"backgroundColor\",\n]);\n/**\n * 10ms is chosen here as it strikes a balance between smooth\n * results (more than one keyframe per frame at 60fps) and\n * keyframe quantity.\n */\nconst sampleDelta = 10; //ms\n/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxDuration = 20000;\nconst requiresPregeneratedKeyframes = (valueName, options) => options.type === \"spring\" ||\n    valueName === \"backgroundColor\" ||\n    !isWaapiSupportedEasing(options.ease);\nfunction createAcceleratedAnimation(value, valueName, { onUpdate, onComplete, ...options }) {\n    const canAccelerateAnimation = supportsWaapi() &&\n        acceleratedValues.has(valueName) &&\n        !options.repeatDelay &&\n        options.repeatType !== \"mirror\" &&\n        options.damping !== 0 &&\n        options.type !== \"inertia\";\n    if (!canAccelerateAnimation)\n        return false;\n    /**\n     * TODO: Unify with js/index\n     */\n    let hasStopped = false;\n    let resolveFinishedPromise;\n    let currentFinishedPromise;\n    /**\n     * Cancelling an animation will write to the DOM. For safety we want to defer\n     * this until the next `update` frame lifecycle. This flag tracks whether we\n     * have a pending cancel, if so we shouldn't allow animations to finish.\n     */\n    let pendingCancel = false;\n    /**\n     * Resolve the current Promise every time we enter the\n     * finished state. This is WAAPI-compatible behaviour.\n     */\n    const updateFinishedPromise = () => {\n        currentFinishedPromise = new Promise((resolve) => {\n            resolveFinishedPromise = resolve;\n        });\n    };\n    // Create the first finished promise\n    updateFinishedPromise();\n    let { keyframes, duration = 300, ease, times } = options;\n    /**\n     * If this animation needs pre-generated keyframes then generate.\n     */\n    if (requiresPregeneratedKeyframes(valueName, options)) {\n        const sampleAnimation = animateValue({\n            ...options,\n            repeat: 0,\n            delay: 0,\n        });\n        let state = { done: false, value: keyframes[0] };\n        const pregeneratedKeyframes = [];\n        /**\n         * Bail after 20 seconds of pre-generated keyframes as it's likely\n         * we're heading for an infinite loop.\n         */\n        let t = 0;\n        while (!state.done && t < maxDuration) {\n            state = sampleAnimation.sample(t);\n            pregeneratedKeyframes.push(state.value);\n            t += sampleDelta;\n        }\n        times = undefined;\n        keyframes = pregeneratedKeyframes;\n        duration = t - sampleDelta;\n        ease = \"linear\";\n    }\n    const animation = animateStyle(value.owner.current, valueName, keyframes, {\n        ...options,\n        duration,\n        /**\n         * This function is currently not called if ease is provided\n         * as a function so the cast is safe.\n         *\n         * However it would be possible for a future refinement to port\n         * in easing pregeneration from Motion One for browsers that\n         * support the upcoming `linear()` easing function.\n         */\n        ease: ease,\n        times,\n    });\n    const cancelAnimation = () => {\n        pendingCancel = false;\n        animation.cancel();\n    };\n    const safeCancel = () => {\n        pendingCancel = true;\n        frame.update(cancelAnimation);\n        resolveFinishedPromise();\n        updateFinishedPromise();\n    };\n    /**\n     * Prefer the `onfinish` prop as it's more widely supported than\n     * the `finished` promise.\n     *\n     * Here, we synchronously set the provided MotionValue to the end\n     * keyframe. If we didn't, when the WAAPI animation is finished it would\n     * be removed from the element which would then revert to its old styles.\n     */\n    animation.onfinish = () => {\n        if (pendingCancel)\n            return;\n        value.set(getFinalKeyframe(keyframes, options));\n        onComplete && onComplete();\n        safeCancel();\n    };\n    /**\n     * Animation interrupt callback.\n     */\n    const controls = {\n        then(resolve, reject) {\n            return currentFinishedPromise.then(resolve, reject);\n        },\n        attachTimeline(timeline) {\n            animation.timeline = timeline;\n            animation.onfinish = null;\n            return noop;\n        },\n        get time() {\n            return millisecondsToSeconds(animation.currentTime || 0);\n        },\n        set time(newTime) {\n            animation.currentTime = secondsToMilliseconds(newTime);\n        },\n        get speed() {\n            return animation.playbackRate;\n        },\n        set speed(newSpeed) {\n            animation.playbackRate = newSpeed;\n        },\n        get duration() {\n            return millisecondsToSeconds(duration);\n        },\n        play: () => {\n            if (hasStopped)\n                return;\n            animation.play();\n            /**\n             * Cancel any pending cancel tasks\n             */\n            cancelFrame(cancelAnimation);\n        },\n        pause: () => animation.pause(),\n        stop: () => {\n            hasStopped = true;\n            if (animation.playState === \"idle\")\n                return;\n            /**\n             * WAAPI doesn't natively have any interruption capabilities.\n             *\n             * Rather than read commited styles back out of the DOM, we can\n             * create a renderless JS animation and sample it twice to calculate\n             * its current value, \"previous\" value, and therefore allow\n             * Motion to calculate velocity for any subsequent animation.\n             */\n            const { currentTime } = animation;\n            if (currentTime) {\n                const sampleAnimation = animateValue({\n                    ...options,\n                    autoplay: false,\n                });\n                value.setWithVelocity(sampleAnimation.sample(currentTime - sampleDelta).value, sampleAnimation.sample(currentTime).value, sampleDelta);\n            }\n            safeCancel();\n        },\n        complete: () => {\n            if (pendingCancel)\n                return;\n            animation.finish();\n        },\n        cancel: safeCancel,\n    };\n    return controls;\n}\n\nexport { createAcceleratedAnimation };\n","function memo(callback) {\n    let result;\n    return () => {\n        if (result === undefined)\n            result = callback();\n        return result;\n    };\n}\n\nexport { memo };\n","import { mapEasingToNativeEasing } from './easing.mjs';\n\nfunction animateStyle(element, valueName, keyframes, { delay = 0, duration, repeat = 0, repeatType = \"loop\", ease, times, } = {}) {\n    const keyframeOptions = { [valueName]: keyframes };\n    if (times)\n        keyframeOptions.offset = times;\n    const easing = mapEasingToNativeEasing(ease);\n    /**\n     * If this is an easing array, apply to keyframes, not animation as a whole\n     */\n    if (Array.isArray(easing))\n        keyframeOptions.easing = easing;\n    return element.animate(keyframeOptions, {\n        delay,\n        duration,\n        easing: !Array.isArray(easing) ? easing : \"linear\",\n        fill: \"both\",\n        iterations: repeat + 1,\n        direction: repeatType === \"reverse\" ? \"alternate\" : \"normal\",\n    });\n}\n\nexport { animateStyle };\n","function getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }) {\n    const index = repeat && repeatType !== \"loop\" && repeat % 2 === 1\n        ? 0\n        : keyframes.length - 1;\n    return keyframes[index];\n}\n\nexport { getFinalKeyframe };\n","import { transformProps } from '../../render/html/utils/transform.mjs';\n\nconst underDampedSpring = {\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restSpeed: 10,\n};\nconst criticallyDampedSpring = (target) => ({\n    type: \"spring\",\n    stiffness: 550,\n    damping: target === 0 ? 2 * Math.sqrt(550) : 30,\n    restSpeed: 10,\n});\nconst keyframesTransition = {\n    type: \"keyframes\",\n    duration: 0.8,\n};\n/**\n * Default easing curve is a slightly shallower version of\n * the default browser easing curve.\n */\nconst ease = {\n    type: \"keyframes\",\n    ease: [0.25, 0.1, 0.35, 1],\n    duration: 0.3,\n};\nconst getDefaultTransition = (valueKey, { keyframes }) => {\n    if (keyframes.length > 2) {\n        return keyframesTransition;\n    }\n    else if (transformProps.has(valueKey)) {\n        return valueKey.startsWith(\"scale\")\n            ? criticallyDampedSpring(keyframes[1])\n            : underDampedSpring;\n    }\n    return ease;\n};\n\nexport { getDefaultTransition };\n","import { complex } from '../../value/types/complex/index.mjs';\n\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\nconst isAnimatable = (key, value) => {\n    // If the list of keys tat might be non-animatable grows, replace with Set\n    if (key === \"zIndex\")\n        return false;\n    // If it's a number or a keyframes array, we can animate it. We might at some point\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n    // but for now lets leave it like this for performance reasons\n    if (typeof value === \"number\" || Array.isArray(value))\n        return true;\n    if (typeof value === \"string\" && // It's animatable if we have a string\n        (complex.test(value) || value === \"0\") && // And it contains numbers and/or colors\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n    ) {\n        return true;\n    }\n    return false;\n};\n\nexport { isAnimatable };\n","import { complex } from './index.mjs';\nimport { floatRegex } from '../utils.mjs';\n\n/**\n * Properties that should default to 1 or 100%\n */\nconst maxDefaults = new Set([\"brightness\", \"contrast\", \"saturate\", \"opacity\"]);\nfunction applyDefaultFilter(v) {\n    const [name, value] = v.slice(0, -1).split(\"(\");\n    if (name === \"drop-shadow\")\n        return v;\n    const [number] = value.match(floatRegex) || [];\n    if (!number)\n        return v;\n    const unit = value.replace(number, \"\");\n    let defaultValue = maxDefaults.has(name) ? 1 : 0;\n    if (number !== value)\n        defaultValue *= 100;\n    return name + \"(\" + defaultValue + unit + \")\";\n}\nconst functionRegex = /([a-z-]*)\\(.*?\\)/g;\nconst filter = {\n    ...complex,\n    getAnimatableNone: (v) => {\n        const functions = v.match(functionRegex);\n        return functions ? functions.map(applyDefaultFilter).join(\" \") : v;\n    },\n};\n\nexport { filter };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { numberValueTypes } from './number.mjs';\n\n/**\n * A map of default value types for common values\n */\nconst defaultValueTypes = {\n    ...numberValueTypes,\n    // Color props\n    color,\n    backgroundColor: color,\n    outlineColor: color,\n    fill: color,\n    stroke: color,\n    // Border props\n    borderColor: color,\n    borderTopColor: color,\n    borderRightColor: color,\n    borderBottomColor: color,\n    borderLeftColor: color,\n    filter,\n    WebkitFilter: filter,\n};\n/**\n * Gets the default ValueType for the provided value key\n */\nconst getDefaultValueType = (key) => defaultValueTypes[key];\n\nexport { defaultValueTypes, getDefaultValueType };\n","import { complex } from '../../../value/types/complex/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { getDefaultValueType } from './defaults.mjs';\n\nfunction getAnimatableNone(key, value) {\n    let defaultValueType = getDefaultValueType(key);\n    if (defaultValueType !== filter)\n        defaultValueType = complex;\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n    return defaultValueType.getAnimatableNone\n        ? defaultValueType.getAnimatableNone(value)\n        : undefined;\n}\n\nexport { getAnimatableNone };\n","/**\n * Check if the value is a zero value string like \"0px\" or \"0%\"\n */\nconst isZeroValueString = (v) => /^0[^.\\s]+$/.test(v);\n\nexport { isZeroValueString };\n","import { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\n\nfunction isNone(value) {\n    if (typeof value === \"number\") {\n        return value === 0;\n    }\n    else if (value !== null) {\n        return value === \"none\" || value === \"0\" || isZeroValueString(value);\n    }\n}\n\nexport { isNone };\n","/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\nfunction isTransitionDefined({ when, delay: _delay, delayChildren, staggerChildren, staggerDirection, repeat, repeatType, repeatDelay, from, elapsed, ...transition }) {\n    return !!Object.keys(transition).length;\n}\nfunction getValueTransition(transition, key) {\n    return transition[key] || transition[\"default\"] || transition;\n}\n\nexport { getValueTransition, isTransitionDefined };\n","import { warning } from '../../utils/errors.mjs';\nimport { secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { createAcceleratedAnimation } from '../animators/waapi/create-accelerated-animation.mjs';\nimport { createInstantAnimation } from '../animators/instant.mjs';\nimport { getDefaultTransition } from '../utils/default-transitions.mjs';\nimport { isAnimatable } from '../utils/is-animatable.mjs';\nimport { getKeyframes } from '../utils/keyframes.mjs';\nimport { getValueTransition, isTransitionDefined } from '../utils/transitions.mjs';\nimport { animateValue } from '../animators/js/index.mjs';\nimport { MotionGlobalConfig } from '../../utils/GlobalConfig.mjs';\n\nconst animateMotionValue = (valueName, value, target, transition = {}) => {\n    return (onComplete) => {\n        const valueTransition = getValueTransition(transition, valueName) || {};\n        /**\n         * Most transition values are currently completely overwritten by value-specific\n         * transitions. In the future it'd be nicer to blend these transitions. But for now\n         * delay actually does inherit from the root transition if not value-specific.\n         */\n        const delay = valueTransition.delay || transition.delay || 0;\n        /**\n         * Elapsed isn't a public transition option but can be passed through from\n         * optimized appear effects in milliseconds.\n         */\n        let { elapsed = 0 } = transition;\n        elapsed = elapsed - secondsToMilliseconds(delay);\n        const keyframes = getKeyframes(value, valueName, target, valueTransition);\n        /**\n         * Check if we're able to animate between the start and end keyframes,\n         * and throw a warning if we're attempting to animate between one that's\n         * animatable and another that isn't.\n         */\n        const originKeyframe = keyframes[0];\n        const targetKeyframe = keyframes[keyframes.length - 1];\n        const isOriginAnimatable = isAnimatable(valueName, originKeyframe);\n        const isTargetAnimatable = isAnimatable(valueName, targetKeyframe);\n        warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${valueName} from \"${originKeyframe}\" to \"${targetKeyframe}\". ${originKeyframe} is not an animatable value - to enable this animation set ${originKeyframe} to a value animatable to ${targetKeyframe} via the \\`style\\` property.`);\n        let options = {\n            keyframes,\n            velocity: value.getVelocity(),\n            ease: \"easeOut\",\n            ...valueTransition,\n            delay: -elapsed,\n            onUpdate: (v) => {\n                value.set(v);\n                valueTransition.onUpdate && valueTransition.onUpdate(v);\n            },\n            onComplete: () => {\n                onComplete();\n                valueTransition.onComplete && valueTransition.onComplete();\n            },\n        };\n        /**\n         * If there's no transition defined for this value, we can generate\n         * unqiue transition settings for this value.\n         */\n        if (!isTransitionDefined(valueTransition)) {\n            options = {\n                ...options,\n                ...getDefaultTransition(valueName, options),\n            };\n        }\n        /**\n         * Both WAAPI and our internal animation functions use durations\n         * as defined by milliseconds, while our external API defines them\n         * as seconds.\n         */\n        if (options.duration) {\n            options.duration = secondsToMilliseconds(options.duration);\n        }\n        if (options.repeatDelay) {\n            options.repeatDelay = secondsToMilliseconds(options.repeatDelay);\n        }\n        if (!isOriginAnimatable ||\n            !isTargetAnimatable ||\n            instantAnimationState.current ||\n            valueTransition.type === false ||\n            MotionGlobalConfig.skipAnimations) {\n            /**\n             * If we can't animate this value, or the global instant animation flag is set,\n             * or this is simply defined as an instant transition, return an instant transition.\n             */\n            return createInstantAnimation(instantAnimationState.current\n                ? { ...options, delay: 0 }\n                : options);\n        }\n        /**\n         * Animate via WAAPI if possible.\n         */\n        if (\n        /**\n         * If this is a handoff animation, the optimised animation will be running via\n         * WAAPI. Therefore, this animation must be JS to ensure it runs \"under\" the\n         * optimised animation.\n         */\n        !transition.isHandoff &&\n            value.owner &&\n            value.owner.current instanceof HTMLElement &&\n            /**\n             * If we're outputting values to onUpdate then we can't use WAAPI as there's\n             * no way to read the value from WAAPI every frame.\n             */\n            !value.owner.getProps().onUpdate) {\n            const acceleratedAnimation = createAcceleratedAnimation(value, valueName, options);\n            if (acceleratedAnimation)\n                return acceleratedAnimation;\n        }\n        /**\n         * If we didn't create an accelerated animation, create a JS animation\n         */\n        return animateValue(options);\n    };\n};\n\nexport { animateMotionValue };\n","import { getAnimatableNone } from '../../render/dom/value-types/animatable-none.mjs';\nimport { isAnimatable } from './is-animatable.mjs';\nimport { isNone } from './is-none.mjs';\n\nfunction getKeyframes(value, valueName, target, transition) {\n    const isTargetAnimatable = isAnimatable(valueName, target);\n    let keyframes;\n    if (Array.isArray(target)) {\n        keyframes = [...target];\n    }\n    else {\n        keyframes = [null, target];\n    }\n    const defaultOrigin = transition.from !== undefined ? transition.from : value.get();\n    let animatableTemplateValue = undefined;\n    const noneKeyframeIndexes = [];\n    for (let i = 0; i < keyframes.length; i++) {\n        /**\n         * Fill null/wildcard keyframes\n         */\n        if (keyframes[i] === null) {\n            keyframes[i] = i === 0 ? defaultOrigin : keyframes[i - 1];\n        }\n        if (isNone(keyframes[i])) {\n            noneKeyframeIndexes.push(i);\n        }\n        // TODO: Clean this conditional, it works for now\n        if (typeof keyframes[i] === \"string\" &&\n            keyframes[i] !== \"none\" &&\n            keyframes[i] !== \"0\") {\n            animatableTemplateValue = keyframes[i];\n        }\n    }\n    if (isTargetAnimatable &&\n        noneKeyframeIndexes.length &&\n        animatableTemplateValue) {\n        for (let i = 0; i < noneKeyframeIndexes.length; i++) {\n            const index = noneKeyframeIndexes[i];\n            keyframes[index] = getAnimatableNone(valueName, animatableTemplateValue);\n        }\n    }\n    return keyframes;\n}\n\nexport { getKeyframes };\n","import { animateValue } from './js/index.mjs';\nimport { noop } from '../../utils/noop.mjs';\n\nfunction createInstantAnimation({ keyframes, delay, onUpdate, onComplete, }) {\n    const setValue = () => {\n        onUpdate && onUpdate(keyframes[keyframes.length - 1]);\n        onComplete && onComplete();\n        /**\n         * TODO: As this API grows it could make sense to always return\n         * animateValue. This will be a bigger project as animateValue\n         * is frame-locked whereas this function resolves instantly.\n         * This is a behavioural change and also has ramifications regarding\n         * assumptions within tests.\n         */\n        return {\n            time: 0,\n            speed: 1,\n            duration: 0,\n            play: (noop),\n            pause: (noop),\n            stop: (noop),\n            then: (resolve) => {\n                resolve();\n                return Promise.resolve();\n            },\n            cancel: (noop),\n            complete: (noop),\n        };\n    };\n    return delay\n        ? animateValue({\n            keyframes: [0, 1],\n            duration: 0,\n            delay,\n            onComplete: setValue,\n        })\n        : setValue();\n}\n\nexport { createInstantAnimation };\n","import { isMotionValue } from '../utils/is-motion-value.mjs';\n\nfunction isWillChangeMotionValue(value) {\n    return Boolean(isMotionValue(value) && value.add);\n}\n\nexport { isWillChangeMotionValue };\n","/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\nconst isNumericalString = (v) => /^\\-?\\d*\\.?\\d+$/.test(v);\n\nexport { isNumericalString };\n","import { addUniqueItem, removeItem } from './array.mjs';\n\nclass SubscriptionManager {\n    constructor() {\n        this.subscriptions = [];\n    }\n    add(handler) {\n        addUniqueItem(this.subscriptions, handler);\n        return () => removeItem(this.subscriptions, handler);\n    }\n    notify(a, b, c) {\n        const numSubscriptions = this.subscriptions.length;\n        if (!numSubscriptions)\n            return;\n        if (numSubscriptions === 1) {\n            /**\n             * If there's only a single handler we can just call it without invoking a loop.\n             */\n            this.subscriptions[0](a, b, c);\n        }\n        else {\n            for (let i = 0; i < numSubscriptions; i++) {\n                /**\n                 * Check whether the handler exists before firing as it's possible\n                 * the subscriptions were modified during this loop running.\n                 */\n                const handler = this.subscriptions[i];\n                handler && handler(a, b, c);\n            }\n        }\n    }\n    getSize() {\n        return this.subscriptions.length;\n    }\n    clear() {\n        this.subscriptions.length = 0;\n    }\n}\n\nexport { SubscriptionManager };\n","function addUniqueItem(arr, item) {\n    if (arr.indexOf(item) === -1)\n        arr.push(item);\n}\nfunction removeItem(arr, item) {\n    const index = arr.indexOf(item);\n    if (index > -1)\n        arr.splice(index, 1);\n}\n// Adapted from array-move\nfunction moveItem([...arr], fromIndex, toIndex) {\n    const startIndex = fromIndex < 0 ? arr.length + fromIndex : fromIndex;\n    if (startIndex >= 0 && startIndex < arr.length) {\n        const endIndex = toIndex < 0 ? arr.length + toIndex : toIndex;\n        const [item] = arr.splice(fromIndex, 1);\n        arr.splice(endIndex, 0, item);\n    }\n    return arr;\n}\n\nexport { addUniqueItem, moveItem, removeItem };\n","import { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { velocityPerSecond } from '../utils/velocity-per-second.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { frame, frameData } from '../frameloop/frame.mjs';\n\nconst isFloat = (value) => {\n    return !isNaN(parseFloat(value));\n};\nconst collectMotionValues = {\n    current: undefined,\n};\n/**\n * `MotionValue` is used to track the state and velocity of motion values.\n *\n * @public\n */\nclass MotionValue {\n    /**\n     * @param init - The initiating value\n     * @param config - Optional configuration options\n     *\n     * -  `transformer`: A function to transform incoming values with.\n     *\n     * @internal\n     */\n    constructor(init, options = {}) {\n        /**\n         * This will be replaced by the build step with the latest version number.\n         * When MotionValues are provided to motion components, warn if versions are mixed.\n         */\n        this.version = \"10.18.0\";\n        /**\n         * Duration, in milliseconds, since last updating frame.\n         *\n         * @internal\n         */\n        this.timeDelta = 0;\n        /**\n         * Timestamp of the last time this `MotionValue` was updated.\n         *\n         * @internal\n         */\n        this.lastUpdated = 0;\n        /**\n         * Tracks whether this value can output a velocity. Currently this is only true\n         * if the value is numerical, but we might be able to widen the scope here and support\n         * other value types.\n         *\n         * @internal\n         */\n        this.canTrackVelocity = false;\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        this.updateAndNotify = (v, render = true) => {\n            this.prev = this.current;\n            this.current = v;\n            // Update timestamp\n            const { delta, timestamp } = frameData;\n            if (this.lastUpdated !== timestamp) {\n                this.timeDelta = delta;\n                this.lastUpdated = timestamp;\n                frame.postRender(this.scheduleVelocityCheck);\n            }\n            // Update update subscribers\n            if (this.prev !== this.current && this.events.change) {\n                this.events.change.notify(this.current);\n            }\n            // Update velocity subscribers\n            if (this.events.velocityChange) {\n                this.events.velocityChange.notify(this.getVelocity());\n            }\n            // Update render subscribers\n            if (render && this.events.renderRequest) {\n                this.events.renderRequest.notify(this.current);\n            }\n        };\n        /**\n         * Schedule a velocity check for the next frame.\n         *\n         * This is an instanced and bound function to prevent generating a new\n         * function once per frame.\n         *\n         * @internal\n         */\n        this.scheduleVelocityCheck = () => frame.postRender(this.velocityCheck);\n        /**\n         * Updates `prev` with `current` if the value hasn't been updated this frame.\n         * This ensures velocity calculations return `0`.\n         *\n         * This is an instanced and bound function to prevent generating a new\n         * function once per frame.\n         *\n         * @internal\n         */\n        this.velocityCheck = ({ timestamp }) => {\n            if (timestamp !== this.lastUpdated) {\n                this.prev = this.current;\n                if (this.events.velocityChange) {\n                    this.events.velocityChange.notify(this.getVelocity());\n                }\n            }\n        };\n        this.hasAnimated = false;\n        this.prev = this.current = init;\n        this.canTrackVelocity = isFloat(this.current);\n        this.owner = options.owner;\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` is updated.\n     *\n     * It returns a function that, when called, will cancel the subscription.\n     *\n     * When calling `onChange` inside a React component, it should be wrapped with the\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\n     *\n     * ```jsx\n     * export const MyComponent = () => {\n     *   const x = useMotionValue(0)\n     *   const y = useMotionValue(0)\n     *   const opacity = useMotionValue(1)\n     *\n     *   useEffect(() => {\n     *     function updateOpacity() {\n     *       const maxXY = Math.max(x.get(), y.get())\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n     *       opacity.set(newOpacity)\n     *     }\n     *\n     *     const unsubscribeX = x.on(\"change\", updateOpacity)\n     *     const unsubscribeY = y.on(\"change\", updateOpacity)\n     *\n     *     return () => {\n     *       unsubscribeX()\n     *       unsubscribeY()\n     *     }\n     *   }, [])\n     *\n     *   return <motion.div style={{ x }} />\n     * }\n     * ```\n     *\n     * @param subscriber - A function that receives the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @deprecated\n     */\n    onChange(subscription) {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, `value.onChange(callback) is deprecated. Switch to value.on(\"change\", callback).`);\n        }\n        return this.on(\"change\", subscription);\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        const unsubscribe = this.events[eventName].add(callback);\n        if (eventName === \"change\") {\n            return () => {\n                unsubscribe();\n                /**\n                 * If we have no more change listeners by the start\n                 * of the next frame, stop active animations.\n                 */\n                frame.read(() => {\n                    if (!this.events.change.getSize()) {\n                        this.stop();\n                    }\n                });\n            };\n        }\n        return unsubscribe;\n    }\n    clearListeners() {\n        for (const eventManagers in this.events) {\n            this.events[eventManagers].clear();\n        }\n    }\n    /**\n     * Attaches a passive effect to the `MotionValue`.\n     *\n     * @internal\n     */\n    attach(passiveEffect, stopPassiveEffect) {\n        this.passiveEffect = passiveEffect;\n        this.stopPassiveEffect = stopPassiveEffect;\n    }\n    /**\n     * Sets the state of the `MotionValue`.\n     *\n     * @remarks\n     *\n     * ```jsx\n     * const x = useMotionValue(0)\n     * x.set(10)\n     * ```\n     *\n     * @param latest - Latest value to set.\n     * @param render - Whether to notify render subscribers. Defaults to `true`\n     *\n     * @public\n     */\n    set(v, render = true) {\n        if (!render || !this.passiveEffect) {\n            this.updateAndNotify(v, render);\n        }\n        else {\n            this.passiveEffect(v, this.updateAndNotify);\n        }\n    }\n    setWithVelocity(prev, current, delta) {\n        this.set(current);\n        this.prev = prev;\n        this.timeDelta = delta;\n    }\n    /**\n     * Set the state of the `MotionValue`, stopping any active animations,\n     * effects, and resets velocity to `0`.\n     */\n    jump(v) {\n        this.updateAndNotify(v);\n        this.prev = v;\n        this.stop();\n        if (this.stopPassiveEffect)\n            this.stopPassiveEffect();\n    }\n    /**\n     * Returns the latest state of `MotionValue`\n     *\n     * @returns - The latest state of `MotionValue`\n     *\n     * @public\n     */\n    get() {\n        if (collectMotionValues.current) {\n            collectMotionValues.current.push(this);\n        }\n        return this.current;\n    }\n    /**\n     * @public\n     */\n    getPrevious() {\n        return this.prev;\n    }\n    /**\n     * Returns the latest velocity of `MotionValue`\n     *\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n     *\n     * @public\n     */\n    getVelocity() {\n        // This could be isFloat(this.prev) && isFloat(this.current), but that would be wasteful\n        return this.canTrackVelocity\n            ? // These casts could be avoided if parseFloat would be typed better\n                velocityPerSecond(parseFloat(this.current) -\n                    parseFloat(this.prev), this.timeDelta)\n            : 0;\n    }\n    /**\n     * Registers a new animation to control this `MotionValue`. Only one\n     * animation can drive a `MotionValue` at one time.\n     *\n     * ```jsx\n     * value.start()\n     * ```\n     *\n     * @param animation - A function that starts the provided animation\n     *\n     * @internal\n     */\n    start(startAnimation) {\n        this.stop();\n        return new Promise((resolve) => {\n            this.hasAnimated = true;\n            this.animation = startAnimation(resolve);\n            if (this.events.animationStart) {\n                this.events.animationStart.notify();\n            }\n        }).then(() => {\n            if (this.events.animationComplete) {\n                this.events.animationComplete.notify();\n            }\n            this.clearAnimation();\n        });\n    }\n    /**\n     * Stop the currently active animation.\n     *\n     * @public\n     */\n    stop() {\n        if (this.animation) {\n            this.animation.stop();\n            if (this.events.animationCancel) {\n                this.events.animationCancel.notify();\n            }\n        }\n        this.clearAnimation();\n    }\n    /**\n     * Returns `true` if this value is currently animating.\n     *\n     * @public\n     */\n    isAnimating() {\n        return !!this.animation;\n    }\n    clearAnimation() {\n        delete this.animation;\n    }\n    /**\n     * Destroy and clean up subscribers to this `MotionValue`.\n     *\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\n     * created a `MotionValue` via the `motionValue` function.\n     *\n     * @public\n     */\n    destroy() {\n        this.clearListeners();\n        this.stop();\n        if (this.stopPassiveEffect) {\n            this.stopPassiveEffect();\n        }\n    }\n}\nfunction motionValue(init, options) {\n    return new MotionValue(init, options);\n}\n\nexport { MotionValue, collectMotionValues, motionValue };\n","/**\n * Tests a provided value against a ValueType\n */\nconst testValueType = (v) => (type) => type.test(v);\n\nexport { testValueType };\n","import { number } from '../../../value/types/numbers/index.mjs';\nimport { px, percent, degrees, vw, vh } from '../../../value/types/numbers/units.mjs';\nimport { testValueType } from './test.mjs';\nimport { auto } from './type-auto.mjs';\n\n/**\n * A list of value types commonly used for dimensions\n */\nconst dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\nconst findDimensionValueType = (v) => dimensionValueTypes.find(testValueType(v));\n\nexport { dimensionValueTypes, findDimensionValueType };\n","/**\n * ValueType for \"auto\"\n */\nconst auto = {\n    test: (v) => v === \"auto\",\n    parse: (v) => v,\n};\n\nexport { auto };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { complex } from '../../../value/types/complex/index.mjs';\nimport { dimensionValueTypes } from './dimensions.mjs';\nimport { testValueType } from './test.mjs';\n\n/**\n * A list of all ValueTypes\n */\nconst valueTypes = [...dimensionValueTypes, color, complex];\n/**\n * Tests a value against the list of ValueTypes\n */\nconst findValueType = (v) => valueTypes.find(testValueType(v));\n\nexport { findValueType };\n","import { isNumericalString } from '../../utils/is-numerical-string.mjs';\nimport { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\nimport { resolveFinalValueInKeyframes } from '../../utils/resolve-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\nimport { getAnimatableNone } from '../dom/value-types/animatable-none.mjs';\nimport { findValueType } from '../dom/value-types/find.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction setTarget(visualElement, definition) {\n    const resolved = resolveVariant(visualElement, definition);\n    let { transitionEnd = {}, transition = {}, ...target } = resolved ? visualElement.makeTargetAnimatable(resolved, false) : {};\n    target = { ...target, ...transitionEnd };\n    for (const key in target) {\n        const value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\nfunction setVariants(visualElement, variantLabels) {\n    const reversedLabels = [...variantLabels].reverse();\n    reversedLabels.forEach((key) => {\n        const variant = visualElement.getVariant(key);\n        variant && setTarget(visualElement, variant);\n        if (visualElement.variantChildren) {\n            visualElement.variantChildren.forEach((child) => {\n                setVariants(child, variantLabels);\n            });\n        }\n    });\n}\nfunction setValues(visualElement, definition) {\n    if (Array.isArray(definition)) {\n        return setVariants(visualElement, definition);\n    }\n    else if (typeof definition === \"string\") {\n        return setVariants(visualElement, [definition]);\n    }\n    else {\n        setTarget(visualElement, definition);\n    }\n}\nfunction checkTargetForNewValues(visualElement, target, origin) {\n    var _a, _b;\n    const newValueKeys = Object.keys(target).filter((key) => !visualElement.hasValue(key));\n    const numNewValues = newValueKeys.length;\n    if (!numNewValues)\n        return;\n    for (let i = 0; i < numNewValues; i++) {\n        const key = newValueKeys[i];\n        const targetValue = target[key];\n        let value = null;\n        /**\n         * If the target is a series of keyframes, we can use the first value\n         * in the array. If this first value is null, we'll still need to read from the DOM.\n         */\n        if (Array.isArray(targetValue)) {\n            value = targetValue[0];\n        }\n        /**\n         * If the target isn't keyframes, or the first keyframe was null, we need to\n         * first check if an origin value was explicitly defined in the transition as \"from\",\n         * if not read the value from the DOM. As an absolute fallback, take the defined target value.\n         */\n        if (value === null) {\n            value = (_b = (_a = origin[key]) !== null && _a !== void 0 ? _a : visualElement.readValue(key)) !== null && _b !== void 0 ? _b : target[key];\n        }\n        /**\n         * If value is still undefined or null, ignore it. Preferably this would throw,\n         * but this was causing issues in Framer.\n         */\n        if (value === undefined || value === null)\n            continue;\n        if (typeof value === \"string\" &&\n            (isNumericalString(value) || isZeroValueString(value))) {\n            // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n            value = parseFloat(value);\n        }\n        else if (!findValueType(value) && complex.test(targetValue)) {\n            value = getAnimatableNone(key, targetValue);\n        }\n        visualElement.addValue(key, motionValue(value, { owner: visualElement }));\n        if (origin[key] === undefined) {\n            origin[key] = value;\n        }\n        if (value !== null)\n            visualElement.setBaseTarget(key, value);\n    }\n}\nfunction getOriginFromTransition(key, transition) {\n    if (!transition)\n        return;\n    const valueTransition = transition[key] || transition[\"default\"] || transition;\n    return valueTransition.from;\n}\nfunction getOrigin(target, transition, visualElement) {\n    const origin = {};\n    for (const key in target) {\n        const transitionOrigin = getOriginFromTransition(key, transition);\n        if (transitionOrigin !== undefined) {\n            origin[key] = transitionOrigin;\n        }\n        else {\n            const value = visualElement.getValue(key);\n            if (value) {\n                origin[key] = value.get();\n            }\n        }\n    }\n    return origin;\n}\n\nexport { checkTargetForNewValues, getOrigin, getOriginFromTransition, setTarget, setValues };\n","import { transformProps } from '../../render/html/utils/transform.mjs';\nimport { optimizedAppearDataAttribute } from '../optimized-appear/data-id.mjs';\nimport { animateMotionValue } from './motion-value.mjs';\nimport { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { setTarget } from '../../render/utils/setters.mjs';\nimport { getValueTransition } from '../utils/transitions.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {\n    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\nfunction hasKeyframesChanged(value, target) {\n    const current = value.get();\n    if (Array.isArray(target)) {\n        for (let i = 0; i < target.length; i++) {\n            if (target[i] !== current)\n                return true;\n        }\n    }\n    else {\n        return current !== target;\n    }\n}\nfunction animateTarget(visualElement, definition, { delay = 0, transitionOverride, type } = {}) {\n    let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = visualElement.makeTargetAnimatable(definition);\n    const willChange = visualElement.getValue(\"willChange\");\n    if (transitionOverride)\n        transition = transitionOverride;\n    const animations = [];\n    const animationTypeState = type &&\n        visualElement.animationState &&\n        visualElement.animationState.getState()[type];\n    for (const key in target) {\n        const value = visualElement.getValue(key);\n        const valueTarget = target[key];\n        if (!value ||\n            valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        const valueTransition = {\n            delay,\n            elapsed: 0,\n            ...getValueTransition(transition || {}, key),\n        };\n        /**\n         * If this is the first time a value is being animated, check\n         * to see if we're handling off from an existing animation.\n         */\n        if (window.HandoffAppearAnimations) {\n            const appearId = visualElement.getProps()[optimizedAppearDataAttribute];\n            if (appearId) {\n                const elapsed = window.HandoffAppearAnimations(appearId, key, value, frame);\n                if (elapsed !== null) {\n                    valueTransition.elapsed = elapsed;\n                    valueTransition.isHandoff = true;\n                }\n            }\n        }\n        let canSkip = !valueTransition.isHandoff &&\n            !hasKeyframesChanged(value, valueTarget);\n        if (valueTransition.type === \"spring\" &&\n            (value.getVelocity() || valueTransition.velocity)) {\n            canSkip = false;\n        }\n        /**\n         * Temporarily disable skipping animations if there's an animation in\n         * progress. Better would be to track the current target of a value\n         * and compare that against valueTarget.\n         */\n        if (value.animation) {\n            canSkip = false;\n        }\n        if (canSkip)\n            continue;\n        value.start(animateMotionValue(key, value, valueTarget, visualElement.shouldReduceMotion && transformProps.has(key)\n            ? { type: false }\n            : valueTransition));\n        const animation = value.animation;\n        if (isWillChangeMotionValue(willChange)) {\n            willChange.add(key);\n            animation.then(() => willChange.remove(key));\n        }\n        animations.push(animation);\n    }\n    if (transitionEnd) {\n        Promise.all(animations).then(() => {\n            transitionEnd && setTarget(visualElement, transitionEnd);\n        });\n    }\n    return animations;\n}\n\nexport { animateTarget };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\n\nfunction animateVariant(visualElement, variant, options = {}) {\n    const resolved = resolveVariant(visualElement, variant, options.custom);\n    let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};\n    if (options.transitionOverride) {\n        transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getAnimation = resolved\n        ? () => Promise.all(animateTarget(visualElement, resolved, options))\n        : () => Promise.resolve();\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getChildAnimations = visualElement.variantChildren && visualElement.variantChildren.size\n        ? (forwardDelay = 0) => {\n            const { delayChildren = 0, staggerChildren, staggerDirection, } = transition;\n            return animateChildren(visualElement, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);\n        }\n        : () => Promise.resolve();\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    const { when } = transition;\n    if (when) {\n        const [first, last] = when === \"beforeChildren\"\n            ? [getAnimation, getChildAnimations]\n            : [getChildAnimations, getAnimation];\n        return first().then(() => last());\n    }\n    else {\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n}\nfunction animateChildren(visualElement, variant, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {\n    const animations = [];\n    const maxStaggerDuration = (visualElement.variantChildren.size - 1) * staggerChildren;\n    const generateStaggerDuration = staggerDirection === 1\n        ? (i = 0) => i * staggerChildren\n        : (i = 0) => maxStaggerDuration - i * staggerChildren;\n    Array.from(visualElement.variantChildren)\n        .sort(sortByTreeOrder)\n        .forEach((child, i) => {\n        child.notify(\"AnimationStart\", variant);\n        animations.push(animateVariant(child, variant, {\n            ...options,\n            delay: delayChildren + generateStaggerDuration(i),\n        }).then(() => child.notify(\"AnimationComplete\", variant)));\n    });\n    return Promise.all(animations);\n}\nfunction sortByTreeOrder(a, b) {\n    return a.sortNodePosition(b);\n}\n\nexport { animateVariant, sortByTreeOrder };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { shallowCompare } from '../../utils/shallow-compare.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { variantPriorityOrder } from './variant-props.mjs';\nimport { animateVisualElement } from '../../animation/interfaces/visual-element.mjs';\n\nconst reversePriorityOrder = [...variantPriorityOrder].reverse();\nconst numAnimationTypes = variantPriorityOrder.length;\nfunction animateList(visualElement) {\n    return (animations) => Promise.all(animations.map(({ animation, options }) => animateVisualElement(visualElement, animation, options)));\n}\nfunction createAnimationState(visualElement) {\n    let animate = animateList(visualElement);\n    const state = createState();\n    let isInitialRender = true;\n    /**\n     * This function will be used to reduce the animation definitions for\n     * each active animation type into an object of resolved values for it.\n     */\n    const buildResolvedTypeValues = (acc, definition) => {\n        const resolved = resolveVariant(visualElement, definition);\n        if (resolved) {\n            const { transition, transitionEnd, ...target } = resolved;\n            acc = { ...acc, ...target, ...transitionEnd };\n        }\n        return acc;\n    };\n    /**\n     * This just allows us to inject mocked animation functions\n     * @internal\n     */\n    function setAnimateFunction(makeAnimator) {\n        animate = makeAnimator(visualElement);\n    }\n    /**\n     * When we receive new props, we need to:\n     * 1. Create a list of protected keys for each type. This is a directory of\n     *    value keys that are currently being \"handled\" by types of a higher priority\n     *    so that whenever an animation is played of a given type, these values are\n     *    protected from being animated.\n     * 2. Determine if an animation type needs animating.\n     * 3. Determine if any values have been removed from a type and figure out\n     *    what to animate those to.\n     */\n    function animateChanges(options, changedActiveType) {\n        const props = visualElement.getProps();\n        const context = visualElement.getVariantContext(true) || {};\n        /**\n         * A list of animations that we'll build into as we iterate through the animation\n         * types. This will get executed at the end of the function.\n         */\n        const animations = [];\n        /**\n         * Keep track of which values have been removed. Then, as we hit lower priority\n         * animation types, we can check if they contain removed values and animate to that.\n         */\n        const removedKeys = new Set();\n        /**\n         * A dictionary of all encountered keys. This is an object to let us build into and\n         * copy it without iteration. Each time we hit an animation type we set its protected\n         * keys - the keys its not allowed to animate - to the latest version of this object.\n         */\n        let encounteredKeys = {};\n        /**\n         * If a variant has been removed at a given index, and this component is controlling\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\n         */\n        let removedVariantIndex = Infinity;\n        /**\n         * Iterate through all animation types in reverse priority order. For each, we want to\n         * detect which values it's handling and whether or not they've changed (and therefore\n         * need to be animated). If any values have been removed, we want to detect those in\n         * lower priority props and flag for animation.\n         */\n        for (let i = 0; i < numAnimationTypes; i++) {\n            const type = reversePriorityOrder[i];\n            const typeState = state[type];\n            const prop = props[type] !== undefined ? props[type] : context[type];\n            const propIsVariant = isVariantLabel(prop);\n            /**\n             * If this type has *just* changed isActive status, set activeDelta\n             * to that status. Otherwise set to null.\n             */\n            const activeDelta = type === changedActiveType ? typeState.isActive : null;\n            if (activeDelta === false)\n                removedVariantIndex = i;\n            /**\n             * If this prop is an inherited variant, rather than been set directly on the\n             * component itself, we want to make sure we allow the parent to trigger animations.\n             *\n             * TODO: Can probably change this to a !isControllingVariants check\n             */\n            let isInherited = prop === context[type] && prop !== props[type] && propIsVariant;\n            /**\n             *\n             */\n            if (isInherited &&\n                isInitialRender &&\n                visualElement.manuallyAnimateOnMount) {\n                isInherited = false;\n            }\n            /**\n             * Set all encountered keys so far as the protected keys for this type. This will\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n             */\n            typeState.protectedKeys = { ...encounteredKeys };\n            // Check if we can skip analysing this prop early\n            if (\n            // If it isn't active and hasn't *just* been set as inactive\n            (!typeState.isActive && activeDelta === null) ||\n                // If we didn't and don't have any defined prop for this animation type\n                (!prop && !typeState.prevProp) ||\n                // Or if the prop doesn't define an animation\n                isAnimationControls(prop) ||\n                typeof prop === \"boolean\") {\n                continue;\n            }\n            /**\n             * As we go look through the values defined on this type, if we detect\n             * a changed value or a value that was removed in a higher priority, we set\n             * this to true and add this prop to the animation list.\n             */\n            const variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\n            let shouldAnimateType = variantDidChange ||\n                // If we're making this variant active, we want to always make it active\n                (type === changedActiveType &&\n                    typeState.isActive &&\n                    !isInherited &&\n                    propIsVariant) ||\n                // If we removed a higher-priority variant (i is in reverse order)\n                (i > removedVariantIndex && propIsVariant);\n            let handledRemovedValues = false;\n            /**\n             * As animations can be set as variant lists, variants or target objects, we\n             * coerce everything to an array if it isn't one already\n             */\n            const definitionList = Array.isArray(prop) ? prop : [prop];\n            /**\n             * Build an object of all the resolved values. We'll use this in the subsequent\n             * animateChanges calls to determine whether a value has changed.\n             */\n            let resolvedValues = definitionList.reduce(buildResolvedTypeValues, {});\n            if (activeDelta === false)\n                resolvedValues = {};\n            /**\n             * Now we need to loop through all the keys in the prev prop and this prop,\n             * and decide:\n             * 1. If the value has changed, and needs animating\n             * 2. If it has been removed, and needs adding to the removedKeys set\n             * 3. If it has been removed in a higher priority type and needs animating\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n             *    needs adding to the type's protectedKeys list.\n             */\n            const { prevResolvedValues = {} } = typeState;\n            const allKeys = {\n                ...prevResolvedValues,\n                ...resolvedValues,\n            };\n            const markToAnimate = (key) => {\n                shouldAnimateType = true;\n                if (removedKeys.has(key)) {\n                    handledRemovedValues = true;\n                    removedKeys.delete(key);\n                }\n                typeState.needsAnimating[key] = true;\n            };\n            for (const key in allKeys) {\n                const next = resolvedValues[key];\n                const prev = prevResolvedValues[key];\n                // If we've already handled this we can just skip ahead\n                if (encounteredKeys.hasOwnProperty(key))\n                    continue;\n                /**\n                 * If the value has changed, we probably want to animate it.\n                 */\n                let valueHasChanged = false;\n                if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n                    valueHasChanged = !shallowCompare(next, prev);\n                }\n                else {\n                    valueHasChanged = next !== prev;\n                }\n                if (valueHasChanged) {\n                    if (next !== undefined) {\n                        // If next is defined and doesn't equal prev, it needs animating\n                        markToAnimate(key);\n                    }\n                    else {\n                        // If it's undefined, it's been removed.\n                        removedKeys.add(key);\n                    }\n                }\n                else if (next !== undefined && removedKeys.has(key)) {\n                    /**\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\n                     * been removed by a higher priority\n                     */\n                    markToAnimate(key);\n                }\n                else {\n                    /**\n                     * If it hasn't changed, we add it to the list of protected values\n                     * to ensure it doesn't get animated.\n                     */\n                    typeState.protectedKeys[key] = true;\n                }\n            }\n            /**\n             * Update the typeState so next time animateChanges is called we can compare the\n             * latest prop and resolvedValues to these.\n             */\n            typeState.prevProp = prop;\n            typeState.prevResolvedValues = resolvedValues;\n            /**\n             *\n             */\n            if (typeState.isActive) {\n                encounteredKeys = { ...encounteredKeys, ...resolvedValues };\n            }\n            if (isInitialRender && visualElement.blockInitialAnimation) {\n                shouldAnimateType = false;\n            }\n            /**\n             * If this is an inherited prop we want to hard-block animations\n             */\n            if (shouldAnimateType && (!isInherited || handledRemovedValues)) {\n                animations.push(...definitionList.map((animation) => ({\n                    animation: animation,\n                    options: { type, ...options },\n                })));\n            }\n        }\n        /**\n         * If there are some removed value that haven't been dealt with,\n         * we need to create a new animation that falls back either to the value\n         * defined in the style prop, or the last read value.\n         */\n        if (removedKeys.size) {\n            const fallbackAnimation = {};\n            removedKeys.forEach((key) => {\n                const fallbackTarget = visualElement.getBaseTarget(key);\n                if (fallbackTarget !== undefined) {\n                    fallbackAnimation[key] = fallbackTarget;\n                }\n            });\n            animations.push({ animation: fallbackAnimation });\n        }\n        let shouldAnimate = Boolean(animations.length);\n        if (isInitialRender &&\n            (props.initial === false || props.initial === props.animate) &&\n            !visualElement.manuallyAnimateOnMount) {\n            shouldAnimate = false;\n        }\n        isInitialRender = false;\n        return shouldAnimate ? animate(animations) : Promise.resolve();\n    }\n    /**\n     * Change whether a certain animation type is active.\n     */\n    function setActive(type, isActive, options) {\n        var _a;\n        // If the active state hasn't changed, we can safely do nothing here\n        if (state[type].isActive === isActive)\n            return Promise.resolve();\n        // Propagate active change to children\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach((child) => { var _a; return (_a = child.animationState) === null || _a === void 0 ? void 0 : _a.setActive(type, isActive); });\n        state[type].isActive = isActive;\n        const animations = animateChanges(options, type);\n        for (const key in state) {\n            state[key].protectedKeys = {};\n        }\n        return animations;\n    }\n    return {\n        animateChanges,\n        setActive,\n        setAnimateFunction,\n        getState: () => state,\n    };\n}\nfunction checkVariantsDidChange(prev, next) {\n    if (typeof next === \"string\") {\n        return next !== prev;\n    }\n    else if (Array.isArray(next)) {\n        return !shallowCompare(next, prev);\n    }\n    return false;\n}\nfunction createTypeState(isActive = false) {\n    return {\n        isActive,\n        protectedKeys: {},\n        needsAnimating: {},\n        prevResolvedValues: {},\n    };\n}\nfunction createState() {\n    return {\n        animate: createTypeState(true),\n        whileInView: createTypeState(),\n        whileHover: createTypeState(),\n        whileTap: createTypeState(),\n        whileDrag: createTypeState(),\n        whileFocus: createTypeState(),\n        exit: createTypeState(),\n    };\n}\n\nexport { checkVariantsDidChange, createAnimationState };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\nimport { animateVariant } from './visual-element-variant.mjs';\n\nfunction animateVisualElement(visualElement, definition, options = {}) {\n    visualElement.notify(\"AnimationStart\", definition);\n    let animation;\n    if (Array.isArray(definition)) {\n        const animations = definition.map((variant) => animateVariant(visualElement, variant, options));\n        animation = Promise.all(animations);\n    }\n    else if (typeof definition === \"string\") {\n        animation = animateVariant(visualElement, definition, options);\n    }\n    else {\n        const resolvedDefinition = typeof definition === \"function\"\n            ? resolveVariant(visualElement, definition, options.custom)\n            : definition;\n        animation = Promise.all(animateTarget(visualElement, resolvedDefinition, options));\n    }\n    return animation.then(() => visualElement.notify(\"AnimationComplete\", definition));\n}\n\nexport { animateVisualElement };\n","class Feature {\n    constructor(node) {\n        this.isMounted = false;\n        this.node = node;\n    }\n    update() { }\n}\n\nexport { Feature };\n","import { Feature } from '../Feature.mjs';\n\nlet id = 0;\nclass ExitAnimationFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.id = id++;\n    }\n    update() {\n        if (!this.node.presenceContext)\n            return;\n        const { isPresent, onExitComplete, custom } = this.node.presenceContext;\n        const { isPresent: prevIsPresent } = this.node.prevPresenceContext || {};\n        if (!this.node.animationState || isPresent === prevIsPresent) {\n            return;\n        }\n        const exitAnimation = this.node.animationState.setActive(\"exit\", !isPresent, { custom: custom !== null && custom !== void 0 ? custom : this.node.getProps().custom });\n        if (onExitComplete && !isPresent) {\n            exitAnimation.then(() => onExitComplete(this.id));\n        }\n    }\n    mount() {\n        const { register } = this.node.presenceContext || {};\n        if (register) {\n            this.unmount = register(this.id);\n        }\n    }\n    unmount() { }\n}\n\nexport { ExitAnimationFeature };\n","import { AnimationFeature } from './animation/index.mjs';\nimport { ExitAnimationFeature } from './animation/exit.mjs';\n\nconst animations = {\n    animation: {\n        Feature: AnimationFeature,\n    },\n    exit: {\n        Feature: ExitAnimationFeature,\n    },\n};\n\nexport { animations };\n","import { isAnimationControls } from '../../../animation/utils/is-animation-controls.mjs';\nimport { createAnimationState } from '../../../render/utils/animation-state.mjs';\nimport { Feature } from '../Feature.mjs';\n\nclass AnimationFeature extends Feature {\n    /**\n     * We dynamically generate the AnimationState manager as it contains a reference\n     * to the underlying animation library. We only want to load that if we load this,\n     * so people can optionally code split it out using the `m` component.\n     */\n    constructor(node) {\n        super(node);\n        node.animationState || (node.animationState = createAnimationState(node));\n    }\n    updateAnimationControlsSubscription() {\n        const { animate } = this.node.getProps();\n        this.unmount();\n        if (isAnimationControls(animate)) {\n            this.unmount = animate.subscribe(this.node);\n        }\n    }\n    /**\n     * Subscribe any provided AnimationControls to the component's VisualElement\n     */\n    mount() {\n        this.updateAnimationControlsSubscription();\n    }\n    update() {\n        const { animate } = this.node.getProps();\n        const { animate: prevAnimate } = this.node.prevProps || {};\n        if (animate !== prevAnimate) {\n            this.updateAnimationControlsSubscription();\n        }\n    }\n    unmount() { }\n}\n\nexport { AnimationFeature };\n","function addDomEvent(target, eventName, handler, options = { passive: true }) {\n    target.addEventListener(eventName, handler, options);\n    return () => target.removeEventListener(eventName, handler);\n}\n\nexport { addDomEvent };\n","import { isPrimaryPointer } from './utils/is-primary-pointer.mjs';\n\nfunction extractEventInfo(event, pointType = \"page\") {\n    return {\n        point: {\n            x: event[pointType + \"X\"],\n            y: event[pointType + \"Y\"],\n        },\n    };\n}\nconst addPointerInfo = (handler) => {\n    return (event) => isPrimaryPointer(event) && handler(event, extractEventInfo(event));\n};\n\nexport { addPointerInfo, extractEventInfo };\n","import { addDomEvent } from './add-dom-event.mjs';\nimport { addPointerInfo } from './event-info.mjs';\n\nfunction addPointerEvent(target, eventName, handler, options) {\n    return addDomEvent(target, eventName, addPointerInfo(handler), options);\n}\n\nexport { addPointerEvent };\n","const isPrimaryPointer = (event) => {\n    if (event.pointerType === \"mouse\") {\n        return typeof event.button !== \"number\" || event.button <= 0;\n    }\n    else {\n        /**\n         * isPrimary is true for all mice buttons, whereas every touch point\n         * is regarded as its own input. So subsequent concurrent touch points\n         * will be false.\n         *\n         * Specifically match against false here as incomplete versions of\n         * PointerEvents in very old browser might have it set as undefined.\n         */\n        return event.isPrimary !== false;\n    }\n};\n\nexport { isPrimaryPointer };\n","function createLock(name) {\n    let lock = null;\n    return () => {\n        const openLock = () => {\n            lock = null;\n        };\n        if (lock === null) {\n            lock = name;\n            return openLock;\n        }\n        return false;\n    };\n}\nconst globalHorizontalLock = createLock(\"dragHorizontal\");\nconst globalVerticalLock = createLock(\"dragVertical\");\nfunction getGlobalLock(drag) {\n    let lock = false;\n    if (drag === \"y\") {\n        lock = globalVerticalLock();\n    }\n    else if (drag === \"x\") {\n        lock = globalHorizontalLock();\n    }\n    else {\n        const openHorizontal = globalHorizontalLock();\n        const openVertical = globalVerticalLock();\n        if (openHorizontal && openVertical) {\n            lock = () => {\n                openHorizontal();\n                openVertical();\n            };\n        }\n        else {\n            // Release the locks because we don't use them\n            if (openHorizontal)\n                openHorizontal();\n            if (openVertical)\n                openVertical();\n        }\n    }\n    return lock;\n}\nfunction isDragActive() {\n    // Check the gesture lock - if we get it, it means no drag gesture is active\n    // and we can safely fire the tap gesture.\n    const openGestureLock = getGlobalLock(true);\n    if (!openGestureLock)\n        return true;\n    openGestureLock();\n    return false;\n}\n\nexport { createLock, getGlobalLock, isDragActive };\n","import { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction addHoverEvent(node, isActive) {\n    const eventName = \"pointer\" + (isActive ? \"enter\" : \"leave\");\n    const callbackName = \"onHover\" + (isActive ? \"Start\" : \"End\");\n    const handleEvent = (event, info) => {\n        if (event.pointerType === \"touch\" || isDragActive())\n            return;\n        const props = node.getProps();\n        if (node.animationState && props.whileHover) {\n            node.animationState.setActive(\"whileHover\", isActive);\n        }\n        if (props[callbackName]) {\n            frame.update(() => props[callbackName](event, info));\n        }\n    };\n    return addPointerEvent(node.current, eventName, handleEvent, {\n        passive: !node.getProps()[callbackName],\n    });\n}\nclass HoverGesture extends Feature {\n    mount() {\n        this.unmount = pipe(addHoverEvent(this.node, true), addHoverEvent(this.node, false));\n    }\n    unmount() { }\n}\n\nexport { HoverGesture };\n","/**\n * Recursively traverse up the tree to check whether the provided child node\n * is the parent or a descendant of it.\n *\n * @param parent - Element to find\n * @param child - Element to test against parent\n */\nconst isNodeOrChild = (parent, child) => {\n    if (!child) {\n        return false;\n    }\n    else if (parent === child) {\n        return true;\n    }\n    else {\n        return isNodeOrChild(parent, child.parentElement);\n    }\n};\n\nexport { isNodeOrChild };\n","import { extractEventInfo } from '../events/event-info.mjs';\nimport { addDomEvent } from '../events/add-dom-event.mjs';\nimport { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { isNodeOrChild } from './utils/is-node-or-child.mjs';\nimport { noop } from '../utils/noop.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction fireSyntheticPointerEvent(name, handler) {\n    if (!handler)\n        return;\n    const syntheticPointerEvent = new PointerEvent(\"pointer\" + name);\n    handler(syntheticPointerEvent, extractEventInfo(syntheticPointerEvent));\n}\nclass PressGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removeStartListeners = noop;\n        this.removeEndListeners = noop;\n        this.removeAccessibleListeners = noop;\n        this.startPointerPress = (startEvent, startInfo) => {\n            if (this.isPressing)\n                return;\n            this.removeEndListeners();\n            const props = this.node.getProps();\n            const endPointerPress = (endEvent, endInfo) => {\n                if (!this.checkPressEnd())\n                    return;\n                const { onTap, onTapCancel, globalTapTarget } = this.node.getProps();\n                frame.update(() => {\n                    /**\n                     * We only count this as a tap gesture if the event.target is the same\n                     * as, or a child of, this component's element\n                     */\n                    !globalTapTarget &&\n                        !isNodeOrChild(this.node.current, endEvent.target)\n                        ? onTapCancel && onTapCancel(endEvent, endInfo)\n                        : onTap && onTap(endEvent, endInfo);\n                });\n            };\n            const removePointerUpListener = addPointerEvent(window, \"pointerup\", endPointerPress, { passive: !(props.onTap || props[\"onPointerUp\"]) });\n            const removePointerCancelListener = addPointerEvent(window, \"pointercancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo), { passive: !(props.onTapCancel || props[\"onPointerCancel\"]) });\n            this.removeEndListeners = pipe(removePointerUpListener, removePointerCancelListener);\n            this.startPress(startEvent, startInfo);\n        };\n        this.startAccessiblePress = () => {\n            const handleKeydown = (keydownEvent) => {\n                if (keydownEvent.key !== \"Enter\" || this.isPressing)\n                    return;\n                const handleKeyup = (keyupEvent) => {\n                    if (keyupEvent.key !== \"Enter\" || !this.checkPressEnd())\n                        return;\n                    fireSyntheticPointerEvent(\"up\", (event, info) => {\n                        const { onTap } = this.node.getProps();\n                        if (onTap) {\n                            frame.update(() => onTap(event, info));\n                        }\n                    });\n                };\n                this.removeEndListeners();\n                this.removeEndListeners = addDomEvent(this.node.current, \"keyup\", handleKeyup);\n                fireSyntheticPointerEvent(\"down\", (event, info) => {\n                    this.startPress(event, info);\n                });\n            };\n            const removeKeydownListener = addDomEvent(this.node.current, \"keydown\", handleKeydown);\n            const handleBlur = () => {\n                if (!this.isPressing)\n                    return;\n                fireSyntheticPointerEvent(\"cancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo));\n            };\n            const removeBlurListener = addDomEvent(this.node.current, \"blur\", handleBlur);\n            this.removeAccessibleListeners = pipe(removeKeydownListener, removeBlurListener);\n        };\n    }\n    startPress(event, info) {\n        this.isPressing = true;\n        const { onTapStart, whileTap } = this.node.getProps();\n        /**\n         * Ensure we trigger animations before firing event callback\n         */\n        if (whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", true);\n        }\n        if (onTapStart) {\n            frame.update(() => onTapStart(event, info));\n        }\n    }\n    checkPressEnd() {\n        this.removeEndListeners();\n        this.isPressing = false;\n        const props = this.node.getProps();\n        if (props.whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", false);\n        }\n        return !isDragActive();\n    }\n    cancelPress(event, info) {\n        if (!this.checkPressEnd())\n            return;\n        const { onTapCancel } = this.node.getProps();\n        if (onTapCancel) {\n            frame.update(() => onTapCancel(event, info));\n        }\n    }\n    mount() {\n        const props = this.node.getProps();\n        const removePointerListener = addPointerEvent(props.globalTapTarget ? window : this.node.current, \"pointerdown\", this.startPointerPress, { passive: !(props.onTapStart || props[\"onPointerStart\"]) });\n        const removeFocusListener = addDomEvent(this.node.current, \"focus\", this.startAccessiblePress);\n        this.removeStartListeners = pipe(removePointerListener, removeFocusListener);\n    }\n    unmount() {\n        this.removeStartListeners();\n        this.removeEndListeners();\n        this.removeAccessibleListeners();\n    }\n}\n\nexport { PressGesture };\n","/**\n * Map an IntersectionHandler callback to an element. We only ever make one handler for one\n * element, so even though these handlers might all be triggered by different\n * observers, we can keep them in the same map.\n */\nconst observerCallbacks = new WeakMap();\n/**\n * Multiple observers can be created for multiple element/document roots. Each with\n * different settings. So here we store dictionaries of observers to each root,\n * using serialised settings (threshold/margin) as lookup keys.\n */\nconst observers = new WeakMap();\nconst fireObserverCallback = (entry) => {\n    const callback = observerCallbacks.get(entry.target);\n    callback && callback(entry);\n};\nconst fireAllObserverCallbacks = (entries) => {\n    entries.forEach(fireObserverCallback);\n};\nfunction initIntersectionObserver({ root, ...options }) {\n    const lookupRoot = root || document;\n    /**\n     * If we don't have an observer lookup map for this root, create one.\n     */\n    if (!observers.has(lookupRoot)) {\n        observers.set(lookupRoot, {});\n    }\n    const rootObservers = observers.get(lookupRoot);\n    const key = JSON.stringify(options);\n    /**\n     * If we don't have an observer for this combination of root and settings,\n     * create one.\n     */\n    if (!rootObservers[key]) {\n        rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, { root, ...options });\n    }\n    return rootObservers[key];\n}\nfunction observeIntersection(element, options, callback) {\n    const rootInteresectionObserver = initIntersectionObserver(options);\n    observerCallbacks.set(element, callback);\n    rootInteresectionObserver.observe(element);\n    return () => {\n        observerCallbacks.delete(element);\n        rootInteresectionObserver.unobserve(element);\n    };\n}\n\nexport { observeIntersection };\n","import { Feature } from '../Feature.mjs';\nimport { observeIntersection } from './observers.mjs';\n\nconst thresholdNames = {\n    some: 0,\n    all: 1,\n};\nclass InViewFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.hasEnteredView = false;\n        this.isInView = false;\n    }\n    startObserver() {\n        this.unmount();\n        const { viewport = {} } = this.node.getProps();\n        const { root, margin: rootMargin, amount = \"some\", once } = viewport;\n        const options = {\n            root: root ? root.current : undefined,\n            rootMargin,\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\n        };\n        const onIntersectionUpdate = (entry) => {\n            const { isIntersecting } = entry;\n            /**\n             * If there's been no change in the viewport state, early return.\n             */\n            if (this.isInView === isIntersecting)\n                return;\n            this.isInView = isIntersecting;\n            /**\n             * Handle hasEnteredView. If this is only meant to run once, and\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\n             */\n            if (once && !isIntersecting && this.hasEnteredView) {\n                return;\n            }\n            else if (isIntersecting) {\n                this.hasEnteredView = true;\n            }\n            if (this.node.animationState) {\n                this.node.animationState.setActive(\"whileInView\", isIntersecting);\n            }\n            /**\n             * Use the latest committed props rather than the ones in scope\n             * when this observer is created\n             */\n            const { onViewportEnter, onViewportLeave } = this.node.getProps();\n            const callback = isIntersecting ? onViewportEnter : onViewportLeave;\n            callback && callback(entry);\n        };\n        return observeIntersection(this.node.current, options, onIntersectionUpdate);\n    }\n    mount() {\n        this.startObserver();\n    }\n    update() {\n        if (typeof IntersectionObserver === \"undefined\")\n            return;\n        const { props, prevProps } = this.node;\n        const hasOptionsChanged = [\"amount\", \"margin\", \"root\"].some(hasViewportOptionChanged(props, prevProps));\n        if (hasOptionsChanged) {\n            this.startObserver();\n        }\n    }\n    unmount() { }\n}\nfunction hasViewportOptionChanged({ viewport = {} }, { viewport: prevViewport = {} } = {}) {\n    return (name) => viewport[name] !== prevViewport[name];\n}\n\nexport { InViewFeature };\n","import { HoverGesture } from '../../gestures/hover.mjs';\nimport { FocusGesture } from '../../gestures/focus.mjs';\nimport { PressGesture } from '../../gestures/press.mjs';\nimport { InViewFeature } from './viewport/index.mjs';\n\nconst gestureAnimations = {\n    inView: {\n        Feature: InViewFeature,\n    },\n    tap: {\n        Feature: PressGesture,\n    },\n    focus: {\n        Feature: FocusGesture,\n    },\n    hover: {\n        Feature: HoverGesture,\n    },\n};\n\nexport { gestureAnimations };\n","import { addDomEvent } from '../events/add-dom-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\n\nclass FocusGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.isActive = false;\n    }\n    onFocus() {\n        let isFocusVisible = false;\n        /**\n         * If this element doesn't match focus-visible then don't\n         * apply whileHover. But, if matches throws that focus-visible\n         * is not a valid selector then in that browser outline styles will be applied\n         * to the element by default and we want to match that behaviour with whileFocus.\n         */\n        try {\n            isFocusVisible = this.node.current.matches(\":focus-visible\");\n        }\n        catch (e) {\n            isFocusVisible = true;\n        }\n        if (!isFocusVisible || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", true);\n        this.isActive = true;\n    }\n    onBlur() {\n        if (!this.isActive || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", false);\n        this.isActive = false;\n    }\n    mount() {\n        this.unmount = pipe(addDomEvent(this.node.current, \"focus\", () => this.onFocus()), addDomEvent(this.node.current, \"blur\", () => this.onBlur()));\n    }\n    unmount() { }\n}\n\nexport { FocusGesture };\n","import { convertBoundingBoxToBox, transformBoxPoints } from '../geometry/conversion.mjs';\nimport { translateAxis } from '../geometry/delta-apply.mjs';\n\nfunction measureViewportBox(instance, transformPoint) {\n    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\n}\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\n    const viewportBox = measureViewportBox(element, transformPagePoint);\n    const { scroll } = rootProjectionNode;\n    if (scroll) {\n        translateAxis(viewportBox.x, scroll.offset.x);\n        translateAxis(viewportBox.y, scroll.offset.y);\n    }\n    return viewportBox;\n}\n\nexport { measurePageBox, measureViewportBox };\n","/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToBox({ top, left, right, bottom, }) {\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertBoxToBoundingBox({ x, y }) {\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoxPoints(point, transformPoint) {\n    if (!transformPoint)\n        return point;\n    const topLeft = transformPoint({ x: point.left, y: point.top });\n    const bottomRight = transformPoint({ x: point.right, y: point.bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n\nexport { convertBoundingBoxToBox, convertBoxToBoundingBox, transformBoxPoints };\n","import { invariant } from '../../../utils/errors.mjs';\nimport { isNumericalString } from '../../../utils/is-numerical-string.mjs';\nimport { isCSSVariableToken } from './is-css-variable.mjs';\n\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\nconst splitCSSVariableRegex = /var\\((--[a-zA-Z0-9-_]+),? ?([a-zA-Z0-9 ()%#.,-]+)?\\)/;\nfunction parseCSSVariable(current) {\n    const match = splitCSSVariableRegex.exec(current);\n    if (!match)\n        return [,];\n    const [, token, fallback] = match;\n    return [token, fallback];\n}\nconst maxDepth = 4;\nfunction getVariableValue(current, element, depth = 1) {\n    invariant(depth <= maxDepth, `Max CSS variable fallback depth detected in property \"${current}\". This may indicate a circular fallback dependency.`);\n    const [token, fallback] = parseCSSVariable(current);\n    // No CSS variable detected\n    if (!token)\n        return;\n    // Attempt to read this CSS variable off the element\n    const resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        const trimmed = resolved.trim();\n        return isNumericalString(trimmed) ? parseFloat(trimmed) : trimmed;\n    }\n    else if (isCSSVariableToken(fallback)) {\n        // The fallback might itself be a CSS variable, in which case we attempt to resolve it too.\n        return getVariableValue(fallback, element, depth + 1);\n    }\n    else {\n        return fallback;\n    }\n}\n/**\n * Resolve CSS variables from\n *\n * @internal\n */\nfunction resolveCSSVariables(visualElement, { ...target }, transitionEnd) {\n    const element = visualElement.current;\n    if (!(element instanceof Element))\n        return { target, transitionEnd };\n    // If `transitionEnd` isn't `undefined`, clone it. We could clone `target` and `transitionEnd`\n    // only if they change but I think this reads clearer and this isn't a performance-critical path.\n    if (transitionEnd) {\n        transitionEnd = { ...transitionEnd };\n    }\n    // Go through existing `MotionValue`s and ensure any existing CSS variables are resolved\n    visualElement.values.forEach((value) => {\n        const current = value.get();\n        if (!isCSSVariableToken(current))\n            return;\n        const resolved = getVariableValue(current, element);\n        if (resolved)\n            value.set(resolved);\n    });\n    // Cycle through every target property and resolve CSS variables. Currently\n    // we only read single-var properties like `var(--foo)`, not `calc(var(--foo) + 20px)`\n    for (const key in target) {\n        const current = target[key];\n        if (!isCSSVariableToken(current))\n            continue;\n        const resolved = getVariableValue(current, element);\n        if (!resolved)\n            continue;\n        // Clone target if it hasn't already been\n        target[key] = resolved;\n        if (!transitionEnd)\n            transitionEnd = {};\n        // If the user hasn't already set this key on `transitionEnd`, set it to the unresolved\n        // CSS variable. This will ensure that after the animation the component will reflect\n        // changes in the value of the CSS variable.\n        if (transitionEnd[key] === undefined) {\n            transitionEnd[key] = current;\n        }\n    }\n    return { target, transitionEnd };\n}\n\nexport { parseCSSVariable, resolveCSSVariables };\n","function _objectDestructuringEmpty(t) {\n  if (null == t) throw new TypeError(\"Cannot destructure \" + t);\n}\nexport { _objectDestructuringEmpty as default };","import { isKeyframesTarget } from '../../../animation/utils/is-keyframes-target.mjs';\nimport { invariant } from '../../../utils/errors.mjs';\nimport { transformPropOrder } from '../../html/utils/transform.mjs';\nimport { findDimensionValueType } from '../value-types/dimensions.mjs';\nimport { isBrowser } from '../../../utils/is-browser.mjs';\nimport { number } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\n\nconst positionalKeys = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    \"x\",\n    \"y\",\n    \"translateX\",\n    \"translateY\",\n]);\nconst isPositionalKey = (key) => positionalKeys.has(key);\nconst hasPositionalKey = (target) => {\n    return Object.keys(target).some(isPositionalKey);\n};\nconst isNumOrPxType = (v) => v === number || v === px;\nconst getPosFromMatrix = (matrix, pos) => parseFloat(matrix.split(\", \")[pos]);\nconst getTranslateFromMatrix = (pos2, pos3) => (_bbox, { transform }) => {\n    if (transform === \"none\" || !transform)\n        return 0;\n    const matrix3d = transform.match(/^matrix3d\\((.+)\\)$/);\n    if (matrix3d) {\n        return getPosFromMatrix(matrix3d[1], pos3);\n    }\n    else {\n        const matrix = transform.match(/^matrix\\((.+)\\)$/);\n        if (matrix) {\n            return getPosFromMatrix(matrix[1], pos2);\n        }\n        else {\n            return 0;\n        }\n    }\n};\nconst transformKeys = new Set([\"x\", \"y\", \"z\"]);\nconst nonTranslationalTransformKeys = transformPropOrder.filter((key) => !transformKeys.has(key));\nfunction removeNonTranslationalTransform(visualElement) {\n    const removedTransforms = [];\n    nonTranslationalTransformKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    // Apply changes to element before measurement\n    if (removedTransforms.length)\n        visualElement.render();\n    return removedTransforms;\n}\nconst positionalValues = {\n    // Dimensions\n    width: ({ x }, { paddingLeft = \"0\", paddingRight = \"0\" }) => x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight),\n    height: ({ y }, { paddingTop = \"0\", paddingBottom = \"0\" }) => y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom),\n    top: (_bbox, { top }) => parseFloat(top),\n    left: (_bbox, { left }) => parseFloat(left),\n    bottom: ({ y }, { top }) => parseFloat(top) + (y.max - y.min),\n    right: ({ x }, { left }) => parseFloat(left) + (x.max - x.min),\n    // Transform\n    x: getTranslateFromMatrix(4, 13),\n    y: getTranslateFromMatrix(5, 14),\n};\n// Alias translate longform names\npositionalValues.translateX = positionalValues.x;\npositionalValues.translateY = positionalValues.y;\nconst convertChangedValueTypes = (target, visualElement, changedKeys) => {\n    const originBbox = visualElement.measureViewportBox();\n    const element = visualElement.current;\n    const elementComputedStyle = getComputedStyle(element);\n    const { display } = elementComputedStyle;\n    const origin = {};\n    // If the element is currently set to display: \"none\", make it visible before\n    // measuring the target bounding box\n    if (display === \"none\") {\n        visualElement.setStaticValue(\"display\", target.display || \"block\");\n    }\n    /**\n     * Record origins before we render and update styles\n     */\n    changedKeys.forEach((key) => {\n        origin[key] = positionalValues[key](originBbox, elementComputedStyle);\n    });\n    // Apply the latest values (as set in checkAndConvertChangedValueTypes)\n    visualElement.render();\n    const targetBbox = visualElement.measureViewportBox();\n    changedKeys.forEach((key) => {\n        // Restore styles to their **calculated computed style**, not their actual\n        // originally set style. This allows us to animate between equivalent pixel units.\n        const value = visualElement.getValue(key);\n        value && value.jump(origin[key]);\n        target[key] = positionalValues[key](targetBbox, elementComputedStyle);\n    });\n    return target;\n};\nconst checkAndConvertChangedValueTypes = (visualElement, target, origin = {}, transitionEnd = {}) => {\n    target = { ...target };\n    transitionEnd = { ...transitionEnd };\n    const targetPositionalKeys = Object.keys(target).filter(isPositionalKey);\n    // We want to remove any transform values that could affect the element's bounding box before\n    // it's measured. We'll reapply these later.\n    let removedTransformValues = [];\n    let hasAttemptedToRemoveTransformValues = false;\n    const changedValueTypeKeys = [];\n    targetPositionalKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (!visualElement.hasValue(key))\n            return;\n        let from = origin[key];\n        let fromType = findDimensionValueType(from);\n        const to = target[key];\n        let toType;\n        // TODO: The current implementation of this basically throws an error\n        // if you try and do value conversion via keyframes. There's probably\n        // a way of doing this but the performance implications would need greater scrutiny,\n        // as it'd be doing multiple resize-remeasure operations.\n        if (isKeyframesTarget(to)) {\n            const numKeyframes = to.length;\n            const fromIndex = to[0] === null ? 1 : 0;\n            from = to[fromIndex];\n            fromType = findDimensionValueType(from);\n            for (let i = fromIndex; i < numKeyframes; i++) {\n                /**\n                 * Don't allow wildcard keyframes to be used to detect\n                 * a difference in value types.\n                 */\n                if (to[i] === null)\n                    break;\n                if (!toType) {\n                    toType = findDimensionValueType(to[i]);\n                    invariant(toType === fromType ||\n                        (isNumOrPxType(fromType) && isNumOrPxType(toType)), \"Keyframes must be of the same dimension as the current value\");\n                }\n                else {\n                    invariant(findDimensionValueType(to[i]) === toType, \"All keyframes must be of the same type\");\n                }\n            }\n        }\n        else {\n            toType = findDimensionValueType(to);\n        }\n        if (fromType !== toType) {\n            // If they're both just number or px, convert them both to numbers rather than\n            // relying on resize/remeasure to convert (which is wasteful in this situation)\n            if (isNumOrPxType(fromType) && isNumOrPxType(toType)) {\n                const current = value.get();\n                if (typeof current === \"string\") {\n                    value.set(parseFloat(current));\n                }\n                if (typeof to === \"string\") {\n                    target[key] = parseFloat(to);\n                }\n                else if (Array.isArray(to) && toType === px) {\n                    target[key] = to.map(parseFloat);\n                }\n            }\n            else if ((fromType === null || fromType === void 0 ? void 0 : fromType.transform) &&\n                (toType === null || toType === void 0 ? void 0 : toType.transform) &&\n                (from === 0 || to === 0)) {\n                // If one or the other value is 0, it's safe to coerce it to the\n                // type of the other without measurement\n                if (from === 0) {\n                    value.set(toType.transform(from));\n                }\n                else {\n                    target[key] = fromType.transform(to);\n                }\n            }\n            else {\n                // If we're going to do value conversion via DOM measurements, we first\n                // need to remove non-positional transform values that could affect the bbox measurements.\n                if (!hasAttemptedToRemoveTransformValues) {\n                    removedTransformValues =\n                        removeNonTranslationalTransform(visualElement);\n                    hasAttemptedToRemoveTransformValues = true;\n                }\n                changedValueTypeKeys.push(key);\n                transitionEnd[key] =\n                    transitionEnd[key] !== undefined\n                        ? transitionEnd[key]\n                        : target[key];\n                value.jump(to);\n            }\n        }\n    });\n    if (changedValueTypeKeys.length) {\n        const scrollY = changedValueTypeKeys.indexOf(\"height\") >= 0\n            ? window.pageYOffset\n            : null;\n        const convertedTarget = convertChangedValueTypes(target, visualElement, changedValueTypeKeys);\n        // If we removed transform values, reapply them before the next render\n        if (removedTransformValues.length) {\n            removedTransformValues.forEach(([key, value]) => {\n                visualElement.getValue(key).set(value);\n            });\n        }\n        // Reapply original values\n        visualElement.render();\n        // Restore scroll position\n        if (isBrowser && scrollY !== null) {\n            window.scrollTo({ top: scrollY });\n        }\n        return { target: convertedTarget, transitionEnd };\n    }\n    else {\n        return { target, transitionEnd };\n    }\n};\n/**\n * Convert value types for x/y/width/height/top/left/bottom/right\n *\n * Allows animation between `'auto'` -> `'100%'` or `0` -> `'calc(50% - 10vw)'`\n *\n * @internal\n */\nfunction unitConversion(visualElement, target, origin, transitionEnd) {\n    return hasPositionalKey(target)\n        ? checkAndConvertChangedValueTypes(visualElement, target, origin, transitionEnd)\n        : { target, transitionEnd };\n}\n\nexport { positionalValues, unitConversion };\n","// Does this device prefer reduced motion? Returns `null` server-side.\nconst prefersReducedMotion = { current: null };\nconst hasReducedMotionListener = { current: false };\n\nexport { hasReducedMotionListener, prefersReducedMotion };\n","const visualElementStore = new WeakMap();\n\nexport { visualElementStore };\n","import { warning, invariant } from '../utils/errors.mjs';\nimport { createBox } from '../projection/geometry/models.mjs';\nimport { isRefObject } from '../utils/is-ref-object.mjs';\nimport { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { isWillChangeMotionValue } from '../value/use-will-change/is.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\nimport { transformProps } from './html/utils/transform.mjs';\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\nimport { isVariantLabel } from './utils/is-variant-label.mjs';\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\nimport { variantProps } from './utils/variant-props.mjs';\nimport { visualElementStore } from './store.mjs';\nimport { frame, cancelFrame } from '../frameloop/frame.mjs';\n\nconst featureNames = Object.keys(featureDefinitions);\nconst numFeatures = featureNames.length;\nconst propEventHandlers = [\n    \"AnimationStart\",\n    \"AnimationComplete\",\n    \"Update\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutMeasure\",\n    \"LayoutAnimationStart\",\n    \"LayoutAnimationComplete\",\n];\nconst numVariantProps = variantProps.length;\n/**\n * A VisualElement is an imperative abstraction around UI elements such as\n * HTMLElement, SVGElement, Three.Object3D etc.\n */\nclass VisualElement {\n    constructor({ parent, props, presenceContext, reducedMotionConfig, visualState, }, options = {}) {\n        /**\n         * A reference to the current underlying Instance, e.g. a HTMLElement\n         * or Three.Mesh etc.\n         */\n        this.current = null;\n        /**\n         * A set containing references to this VisualElement's children.\n         */\n        this.children = new Set();\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        this.isVariantNode = false;\n        this.isControllingVariants = false;\n        /**\n         * Decides whether this VisualElement should animate in reduced motion\n         * mode.\n         *\n         * TODO: This is currently set on every individual VisualElement but feels\n         * like it could be set globally.\n         */\n        this.shouldReduceMotion = null;\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        this.values = new Map();\n        /**\n         * Cleanup functions for active features (hover/tap/exit etc)\n         */\n        this.features = {};\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        this.valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        this.prevMotionValues = {};\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        /**\n         * An object containing an unsubscribe function for each prop event subscription.\n         * For example, every \"Update\" event can have multiple subscribers via\n         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\n         */\n        this.propEventSubscriptions = {};\n        this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\n        this.render = () => {\n            if (!this.current)\n                return;\n            this.triggerBuild();\n            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\n        };\n        this.scheduleRender = () => frame.render(this.render, false, true);\n        const { latestValues, renderState } = visualState;\n        this.latestValues = latestValues;\n        this.baseTarget = { ...latestValues };\n        this.initialValues = props.initial ? { ...latestValues } : {};\n        this.renderState = renderState;\n        this.parent = parent;\n        this.props = props;\n        this.presenceContext = presenceContext;\n        this.depth = parent ? parent.depth + 1 : 0;\n        this.reducedMotionConfig = reducedMotionConfig;\n        this.options = options;\n        this.isControllingVariants = isControllingVariants(props);\n        this.isVariantNode = isVariantNode(props);\n        if (this.isVariantNode) {\n            this.variantChildren = new Set();\n        }\n        this.manuallyAnimateOnMount = Boolean(parent && parent.current);\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't neccessarily a breaking change,\n         * more a reflection of the test.\n         */\n        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props, {});\n        for (const key in initialMotionValues) {\n            const value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key], false);\n                if (isWillChangeMotionValue(willChange)) {\n                    willChange.add(key);\n                }\n            }\n        }\n    }\n    /**\n     * This method takes React props and returns found MotionValues. For example, HTML\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\n     *\n     * This isn't an abstract method as it needs calling in the constructor, but it is\n     * intended to be one.\n     */\n    scrapeMotionValuesFromProps(_props, _prevProps) {\n        return {};\n    }\n    mount(instance) {\n        this.current = instance;\n        visualElementStore.set(instance, this);\n        if (this.projection && !this.projection.instance) {\n            this.projection.mount(instance);\n        }\n        if (this.parent && this.isVariantNode && !this.isControllingVariants) {\n            this.removeFromVariantTree = this.parent.addVariantChild(this);\n        }\n        this.values.forEach((value, key) => this.bindToMotionValue(key, value));\n        if (!hasReducedMotionListener.current) {\n            initPrefersReducedMotion();\n        }\n        this.shouldReduceMotion =\n            this.reducedMotionConfig === \"never\"\n                ? false\n                : this.reducedMotionConfig === \"always\"\n                    ? true\n                    : prefersReducedMotion.current;\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(this.shouldReduceMotion !== true, \"You have Reduced Motion enabled on your device. Animations may not appear as expected.\");\n        }\n        if (this.parent)\n            this.parent.children.add(this);\n        this.update(this.props, this.presenceContext);\n    }\n    unmount() {\n        visualElementStore.delete(this.current);\n        this.projection && this.projection.unmount();\n        cancelFrame(this.notifyUpdate);\n        cancelFrame(this.render);\n        this.valueSubscriptions.forEach((remove) => remove());\n        this.removeFromVariantTree && this.removeFromVariantTree();\n        this.parent && this.parent.children.delete(this);\n        for (const key in this.events) {\n            this.events[key].clear();\n        }\n        for (const key in this.features) {\n            this.features[key].unmount();\n        }\n        this.current = null;\n    }\n    bindToMotionValue(key, value) {\n        const valueIsTransform = transformProps.has(key);\n        const removeOnChange = value.on(\"change\", (latestValue) => {\n            this.latestValues[key] = latestValue;\n            this.props.onUpdate &&\n                frame.update(this.notifyUpdate, false, true);\n            if (valueIsTransform && this.projection) {\n                this.projection.isTransformDirty = true;\n            }\n        });\n        const removeOnRenderRequest = value.on(\"renderRequest\", this.scheduleRender);\n        this.valueSubscriptions.set(key, () => {\n            removeOnChange();\n            removeOnRenderRequest();\n        });\n    }\n    sortNodePosition(other) {\n        /**\n         * If these nodes aren't even of the same type we can't compare their depth.\n         */\n        if (!this.current ||\n            !this.sortInstanceNodePosition ||\n            this.type !== other.type) {\n            return 0;\n        }\n        return this.sortInstanceNodePosition(this.current, other.current);\n    }\n    loadFeatures({ children, ...renderedProps }, isStrict, preloadedFeatures, initialLayoutGroupConfig) {\n        let ProjectionNodeConstructor;\n        let MeasureLayout;\n        /**\n         * If we're in development mode, check to make sure we're not rendering a motion component\n         * as a child of LazyMotion, as this will break the file-size benefits of using it.\n         */\n        if (process.env.NODE_ENV !== \"production\" &&\n            preloadedFeatures &&\n            isStrict) {\n            const strictMessage = \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\";\n            renderedProps.ignoreStrict\n                ? warning(false, strictMessage)\n                : invariant(false, strictMessage);\n        }\n        for (let i = 0; i < numFeatures; i++) {\n            const name = featureNames[i];\n            const { isEnabled, Feature: FeatureConstructor, ProjectionNode, MeasureLayout: MeasureLayoutComponent, } = featureDefinitions[name];\n            if (ProjectionNode)\n                ProjectionNodeConstructor = ProjectionNode;\n            if (isEnabled(renderedProps)) {\n                if (!this.features[name] && FeatureConstructor) {\n                    this.features[name] = new FeatureConstructor(this);\n                }\n                if (MeasureLayoutComponent) {\n                    MeasureLayout = MeasureLayoutComponent;\n                }\n            }\n        }\n        if ((this.type === \"html\" || this.type === \"svg\") &&\n            !this.projection &&\n            ProjectionNodeConstructor) {\n            this.projection = new ProjectionNodeConstructor(this.latestValues, this.parent && this.parent.projection);\n            const { layoutId, layout, drag, dragConstraints, layoutScroll, layoutRoot, } = renderedProps;\n            this.projection.setOptions({\n                layoutId,\n                layout,\n                alwaysMeasureLayout: Boolean(drag) ||\n                    (dragConstraints && isRefObject(dragConstraints)),\n                visualElement: this,\n                scheduleRender: () => this.scheduleRender(),\n                /**\n                 * TODO: Update options in an effect. This could be tricky as it'll be too late\n                 * to update by the time layout animations run.\n                 * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\n                 * ensuring it gets called if there's no potential layout animations.\n                 *\n                 */\n                animationType: typeof layout === \"string\" ? layout : \"both\",\n                initialPromotionConfig: initialLayoutGroupConfig,\n                layoutScroll,\n                layoutRoot,\n            });\n        }\n        return MeasureLayout;\n    }\n    updateFeatures() {\n        for (const key in this.features) {\n            const feature = this.features[key];\n            if (feature.isMounted) {\n                feature.update();\n            }\n            else {\n                feature.mount();\n                feature.isMounted = true;\n            }\n        }\n    }\n    triggerBuild() {\n        this.build(this.renderState, this.latestValues, this.options, this.props);\n    }\n    /**\n     * Measure the current viewport box with or without transforms.\n     * Only measures axis-aligned boxes, rotate and skew must be manually\n     * removed with a re-render to work.\n     */\n    measureViewportBox() {\n        return this.current\n            ? this.measureInstanceViewportBox(this.current, this.props)\n            : createBox();\n    }\n    getStaticValue(key) {\n        return this.latestValues[key];\n    }\n    setStaticValue(key, value) {\n        this.latestValues[key] = value;\n    }\n    /**\n     * Make a target animatable by Popmotion. For instance, if we're\n     * trying to animate width from 100px to 100vw we need to measure 100vw\n     * in pixels to determine what we really need to animate to. This is also\n     * pluggable to support Framer's custom value types like Color,\n     * and CSS variables.\n     */\n    makeTargetAnimatable(target, canMutate = true) {\n        return this.makeTargetAnimatableFromInstance(target, this.props, canMutate);\n    }\n    /**\n     * Update the provided props. Ensure any newly-added motion values are\n     * added to our map, old ones removed, and listeners updated.\n     */\n    update(props, presenceContext) {\n        if (props.transformTemplate || this.props.transformTemplate) {\n            this.scheduleRender();\n        }\n        this.prevProps = this.props;\n        this.props = props;\n        this.prevPresenceContext = this.presenceContext;\n        this.presenceContext = presenceContext;\n        /**\n         * Update prop event handlers ie onAnimationStart, onAnimationComplete\n         */\n        for (let i = 0; i < propEventHandlers.length; i++) {\n            const key = propEventHandlers[i];\n            if (this.propEventSubscriptions[key]) {\n                this.propEventSubscriptions[key]();\n                delete this.propEventSubscriptions[key];\n            }\n            const listener = props[\"on\" + key];\n            if (listener) {\n                this.propEventSubscriptions[key] = this.on(key, listener);\n            }\n        }\n        this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props, this.prevProps), this.prevMotionValues);\n        if (this.handleChildMotionValue) {\n            this.handleChildMotionValue();\n        }\n    }\n    getProps() {\n        return this.props;\n    }\n    /**\n     * Returns the variant definition with a given name.\n     */\n    getVariant(name) {\n        return this.props.variants ? this.props.variants[name] : undefined;\n    }\n    /**\n     * Returns the defined default transition on this component.\n     */\n    getDefaultTransition() {\n        return this.props.transition;\n    }\n    getTransformPagePoint() {\n        return this.props.transformPagePoint;\n    }\n    getClosestVariantNode() {\n        return this.isVariantNode\n            ? this\n            : this.parent\n                ? this.parent.getClosestVariantNode()\n                : undefined;\n    }\n    getVariantContext(startAtParent = false) {\n        if (startAtParent) {\n            return this.parent ? this.parent.getVariantContext() : undefined;\n        }\n        if (!this.isControllingVariants) {\n            const context = this.parent\n                ? this.parent.getVariantContext() || {}\n                : {};\n            if (this.props.initial !== undefined) {\n                context.initial = this.props.initial;\n            }\n            return context;\n        }\n        const context = {};\n        for (let i = 0; i < numVariantProps; i++) {\n            const name = variantProps[i];\n            const prop = this.props[name];\n            if (isVariantLabel(prop) || prop === false) {\n                context[name] = prop;\n            }\n        }\n        return context;\n    }\n    /**\n     * Add a child visual element to our set of children.\n     */\n    addVariantChild(child) {\n        const closestVariantNode = this.getClosestVariantNode();\n        if (closestVariantNode) {\n            closestVariantNode.variantChildren &&\n                closestVariantNode.variantChildren.add(child);\n            return () => closestVariantNode.variantChildren.delete(child);\n        }\n    }\n    /**\n     * Add a motion value and bind it to this visual element.\n     */\n    addValue(key, value) {\n        // Remove existing value if it exists\n        if (value !== this.values.get(key)) {\n            this.removeValue(key);\n            this.bindToMotionValue(key, value);\n        }\n        this.values.set(key, value);\n        this.latestValues[key] = value.get();\n    }\n    /**\n     * Remove a motion value and unbind any active subscriptions.\n     */\n    removeValue(key) {\n        this.values.delete(key);\n        const unsubscribe = this.valueSubscriptions.get(key);\n        if (unsubscribe) {\n            unsubscribe();\n            this.valueSubscriptions.delete(key);\n        }\n        delete this.latestValues[key];\n        this.removeValueFromRenderState(key, this.renderState);\n    }\n    /**\n     * Check whether we have a motion value for this key\n     */\n    hasValue(key) {\n        return this.values.has(key);\n    }\n    getValue(key, defaultValue) {\n        if (this.props.values && this.props.values[key]) {\n            return this.props.values[key];\n        }\n        let value = this.values.get(key);\n        if (value === undefined && defaultValue !== undefined) {\n            value = motionValue(defaultValue, { owner: this });\n            this.addValue(key, value);\n        }\n        return value;\n    }\n    /**\n     * If we're trying to animate to a previously unencountered value,\n     * we need to check for it in our state and as a last resort read it\n     * directly from the instance (which might have performance implications).\n     */\n    readValue(key) {\n        var _a;\n        return this.latestValues[key] !== undefined || !this.current\n            ? this.latestValues[key]\n            : (_a = this.getBaseTargetFromProps(this.props, key)) !== null && _a !== void 0 ? _a : this.readValueFromInstance(this.current, key, this.options);\n    }\n    /**\n     * Set the base target to later animate back to. This is currently\n     * only hydrated on creation and when we first read a value.\n     */\n    setBaseTarget(key, value) {\n        this.baseTarget[key] = value;\n    }\n    /**\n     * Find the base target for a value thats been removed from all animation\n     * props.\n     */\n    getBaseTarget(key) {\n        var _a;\n        const { initial } = this.props;\n        const valueFromInitial = typeof initial === \"string\" || typeof initial === \"object\"\n            ? (_a = resolveVariantFromProps(this.props, initial)) === null || _a === void 0 ? void 0 : _a[key]\n            : undefined;\n        /**\n         * If this value still exists in the current initial variant, read that.\n         */\n        if (initial && valueFromInitial !== undefined) {\n            return valueFromInitial;\n        }\n        /**\n         * Alternatively, if this VisualElement config has defined a getBaseTarget\n         * so we can read the value from an alternative source, try that.\n         */\n        const target = this.getBaseTargetFromProps(this.props, key);\n        if (target !== undefined && !isMotionValue(target))\n            return target;\n        /**\n         * If the value was initially defined on initial, but it doesn't any more,\n         * return undefined. Otherwise return the value as initially read from the DOM.\n         */\n        return this.initialValues[key] !== undefined &&\n            valueFromInitial === undefined\n            ? undefined\n            : this.baseTarget[key];\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    notify(eventName, ...args) {\n        if (this.events[eventName]) {\n            this.events[eventName].notify(...args);\n        }\n    }\n}\n\nexport { VisualElement };\n","import { isBrowser } from '../is-browser.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from './state.mjs';\n\nfunction initPrefersReducedMotion() {\n    hasReducedMotionListener.current = true;\n    if (!isBrowser)\n        return;\n    if (window.matchMedia) {\n        const motionMediaQuery = window.matchMedia(\"(prefers-reduced-motion)\");\n        const setReducedMotionPreferences = () => (prefersReducedMotion.current = motionMediaQuery.matches);\n        motionMediaQuery.addListener(setReducedMotionPreferences);\n        setReducedMotionPreferences();\n    }\n    else {\n        prefersReducedMotion.current = false;\n    }\n}\n\nexport { initPrefersReducedMotion };\n","const createAxisDelta = () => ({\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0,\n});\nconst createDelta = () => ({\n    x: createAxisDelta(),\n    y: createAxisDelta(),\n});\nconst createAxis = () => ({ min: 0, max: 0 });\nconst createBox = () => ({\n    x: createAxis(),\n    y: createAxis(),\n});\n\nexport { createAxis, createAxisDelta, createBox, createDelta };\n","import { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { warnOnce } from '../../utils/warn-once.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    const { willChange } = next;\n    for (const key in next) {\n        const nextValue = next[key];\n        const prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.add(key);\n            }\n            /**\n             * Check the version of the incoming motion value with this version\n             * and warn against mismatches.\n             */\n            if (process.env.NODE_ENV === \"development\") {\n                warnOnce(nextValue.version === \"10.18.0\", `Attempting to mix Framer Motion versions ${nextValue.version} with 10.18.0 may not work as expected.`);\n            }\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping from a motion value to a static value,\n             * create a new motion value from that\n             */\n            element.addValue(key, motionValue(nextValue, { owner: element }));\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.remove(key);\n            }\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                const existingValue = element.getValue(key);\n                // TODO: Only update values that aren't being animated or even looked at\n                !existingValue.hasAnimated && existingValue.set(nextValue);\n            }\n            else {\n                const latestValue = element.getStaticValue(key);\n                element.addValue(key, motionValue(latestValue !== undefined ? latestValue : nextValue, { owner: element }));\n            }\n        }\n    }\n    // Handle removed values\n    for (const key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nexport { updateMotionValuesFromProps };\n","import { getOrigin, checkTargetForNewValues } from '../utils/setters.mjs';\nimport { parseDomVariant } from './utils/parse-dom-variant.mjs';\nimport { VisualElement } from '../VisualElement.mjs';\n\nclass DOMVisualElement extends VisualElement {\n    sortInstanceNodePosition(a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props.style ? props.style[key] : undefined;\n    }\n    removeValueFromRenderState(key, { vars, style }) {\n        delete vars[key];\n        delete style[key];\n    }\n    makeTargetAnimatableFromInstance({ transition, transitionEnd, ...target }, { transformValues }, isMounted) {\n        let origin = getOrigin(target, transition || {}, this);\n        /**\n         * If Framer has provided a function to convert `Color` etc value types, convert them\n         */\n        if (transformValues) {\n            if (transitionEnd)\n                transitionEnd = transformValues(transitionEnd);\n            if (target)\n                target = transformValues(target);\n            if (origin)\n                origin = transformValues(origin);\n        }\n        if (isMounted) {\n            checkTargetForNewValues(this, target, origin);\n            const parsed = parseDomVariant(this, target, origin, transitionEnd);\n            transitionEnd = parsed.transitionEnd;\n            target = parsed.target;\n        }\n        return {\n            transition,\n            transitionEnd,\n            ...target,\n        };\n    }\n}\n\nexport { DOMVisualElement };\n","import { resolveCSSVariables } from './css-variables-conversion.mjs';\nimport { unitConversion } from './unit-conversion.mjs';\n\n/**\n * Parse a DOM variant to make it animatable. This involves resolving CSS variables\n * and ensuring animations like \"20%\" => \"calc(50vw)\" are performed in pixels.\n */\nconst parseDomVariant = (visualElement, target, origin, transitionEnd) => {\n    const resolved = resolveCSSVariables(visualElement, target, transitionEnd);\n    target = resolved.target;\n    transitionEnd = resolved.transitionEnd;\n    return unitConversion(visualElement, target, origin, transitionEnd);\n};\n\nexport { parseDomVariant };\n","import { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { isCSSVariableName } from '../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './utils/transform.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { renderHTML } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { measureViewportBox } from '../../projection/utils/measure.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction getComputedStyle(element) {\n    return window.getComputedStyle(element);\n}\nclass HTMLVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"html\";\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        else {\n            const computedStyle = getComputedStyle(instance);\n            const value = (isCSSVariableName(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0;\n            return typeof value === \"string\" ? value.trim() : value;\n        }\n    }\n    measureInstanceViewportBox(instance, { transformPagePoint }) {\n        return measureViewportBox(instance, transformPagePoint);\n    }\n    build(renderState, latestValues, options, props) {\n        buildHTMLStyles(renderState, latestValues, options, props.transformTemplate);\n    }\n    scrapeMotionValuesFromProps(props, prevProps) {\n        return scrapeMotionValuesFromProps(props, prevProps);\n    }\n    handleChildMotionValue() {\n        if (this.childSubscription) {\n            this.childSubscription();\n            delete this.childSubscription;\n        }\n        const { children } = this.props;\n        if (isMotionValue(children)) {\n            this.childSubscription = children.on(\"change\", (latest) => {\n                if (this.current)\n                    this.current.textContent = `${latest}`;\n            });\n        }\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderHTML(instance, renderState, styleProp, projection);\n    }\n}\n\nexport { HTMLVisualElement, getComputedStyle };\n","import { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { transformProps } from '../html/utils/transform.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nclass SVGVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"svg\";\n        this.isSVGTag = false;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props[key];\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return instance.getAttribute(key);\n    }\n    measureInstanceViewportBox() {\n        return createBox();\n    }\n    scrapeMotionValuesFromProps(props, prevProps) {\n        return scrapeMotionValuesFromProps(props, prevProps);\n    }\n    build(renderState, latestValues, options, props) {\n        buildSVGAttrs(renderState, latestValues, options, this.isSVGTag, props.transformTemplate);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderSVG(instance, renderState, styleProp, projection);\n    }\n    mount(instance) {\n        this.isSVGTag = isSVGTag(instance.tagName);\n        super.mount(instance);\n    }\n}\n\nexport { SVGVisualElement };\n","\"use client\";\n\n// src/index.ts\nimport { domAnimation } from \"framer-motion\";\nvar src_default = domAnimation;\nexport {\n  src_default as default\n};\n","import { animations } from '../../motion/features/animations.mjs';\nimport { gestureAnimations } from '../../motion/features/gestures.mjs';\nimport { createDomVisualElement } from './create-visual-element.mjs';\n\n/**\n * @public\n */\nconst domAnimation = {\n    renderer: createDomVisualElement,\n    ...animations,\n    ...gestureAnimations,\n};\n\nexport { domAnimation };\n","import { HTMLVisualElement } from '../html/HTMLVisualElement.mjs';\nimport { SVGVisualElement } from '../svg/SVGVisualElement.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nconst createDomVisualElement = (Component, options) => {\n    return isSVGComponent(Component)\n        ? new SVGVisualElement(options, { enableHardwareAcceleration: false })\n        : new HTMLVisualElement(options, { enableHardwareAcceleration: true });\n};\n\nexport { createDomVisualElement };\n"],"names":["shallowCompare","next","prev","Array","isArray","prevLength","length","i","resolveVariant","visualElement","definition","custom","props","getProps","resolveVariantFromProps","undefined","current","values","forEach","value","key","get","getCurrent","velocity","getVelocity","secondsToMilliseconds","seconds","millisecondsToSeconds","milliseconds","instantAnimationState","isBezierDefinition","easing","isWaapiSupportedEasing","Boolean","supportedWaapiEasing","every","cubicBezierAsString","_ref","a","b","c","d","concat","linear","ease","easeIn","easeOut","easeInOut","circIn","circOut","backIn","backOut","mapEasingToNativeEasing","map","calcBezier","t","a1","a2","cubicBezier","mX1","mY1","mX2","mY2","noop","getTForX","aX","x","lowerBound","upperBound","currentX","currentT","Math","abs","binarySubdivide","mirrorEasing","p","reverseEasing","sin","acos","circInOut","backInOut","easingLookup","anticipate","pow","easingDefinitionToFunction","invariant","x1","y1","x2","y2","isColorString","type","testProp","v","isString","singleColorRegex","test","startsWith","Object","prototype","hasOwnProperty","call","splitColor","aName","bName","cName","alpha","match","floatRegex","parseFloat","rgbUnit","_objectSpread","number","transform","round","clamp","clampRgbUnit","rgba","parse","red","green","blue","alpha$1","sanitize","hex","r","g","substring","parseInt","hsla","hue","saturation","lightness","percent","color","mix","from","to","progress","hueToRgb","q","mixLinearColor","fromExpo","sqrt","max","colorTypes","asRGBA","find","model","hslaToRgba","mixColor","fromRGBA","toRGBA","blended","combineFunctions","pipe","_len","arguments","transformers","_key","reduce","cssVarTokeniser","regex","cssVariableRegex","countKey","token","colorTokeniser","colorRegex","numberTokeniser","tokenise","info","matches","tokenised","replace","push","analyseComplexValue","originalValue","toString","numVars","numColors","numNumbers","includes","parseComplexValue","createTransformer","source","numValues","output","convertNumbersToZero","complex","_a","_b","isNaN","getAnimatableNone","parsed","transformer","mixImmediate","origin","target","getMixer","mixComplex","mixArray","blendValue","fromThis","mixObject","template","originStats","targetStats","warning","toFromDifference","mixNumber","createMixers","customMixer","mixers","mixerFactory","numMixers","mixer","easingFunction","interpolate","input","isClamp","inputLength","reverse","interpolator","progressInRange","defaultOffset","arr","offset","remaining","min","offsetProgress","fillOffset","keyframes","duration","keyframeValues","times","easingFunctions","isEasingArray","state","done","absoluteTimes","o","convertOffsetToTimes","mapTimeToKeyframe","splice","calculatedDuration","velocityPerSecond","frameDuration","calcGeneratorVelocity","resolveValue","prevT","safeMin","findSpring","envelope","derivative","bounce","mass","dampingRatio","undampedFreq","exponentialDecay","delta","calcAngularFreq","exp","e","f","initialGuess","result","rootIterations","approximateRoot","stiffness","damping","durationKeys","physicsKeys","isSpringType","options","keys","some","spring","restDelta","restSpeed","_objectWithoutProperties","_excluded","isResolvedFromDuration","springOptions","derived","getSpringOptions","initialVelocity","initialDelta","undampedAngularFreq","isGranularScale","resolveSpring","angularFreq","cos","dampedAngularFreq","freqForT","sinh","cosh","currentVelocity","isBelowVelocityThreshold","isBelowDisplacementThreshold","inertia","power","timeConstant","bounceDamping","bounceStiffness","modifyTarget","nearestBoundary","amplitude","ideal","calcDelta","calcLatest","applyFriction","latest","timeReachedBoundary","spring$1","checkCatchBoundary","hasUpdatedFrame","frameloopDriver","update","passTimestamp","timestamp","start","frame","stop","cancelFrame","now","frameData","isProcessing","performance","calcGeneratorDuration","generator","Infinity","types","decay","tween","animateValue","resolveFinishedPromise","currentFinishedPromise","autoplay","delay","driver","keyframes$1","repeat","repeatDelay","repeatType","onPlay","onStop","onComplete","onUpdate","speed","hasStopped","updateFinishedPromise","Promise","resolve","animationDriver","generatorFactory","mapNumbersToKeyframes","mirroredGenerator","playState","holdTime","startTime","cancelTime","resolvedDuration","totalDuration","currentTime","tick","timeWithoutDelay","isInDelayPhase","elapsed","frameGenerator","currentIteration","floor","iterationProgress","isAnimationFinished","finish","stopAnimationDriver","cancel","play","controls","then","reject","time","newTime","newSpeed","pause","complete","sample","supportsWaapi","callback","memo","Element","acceleratedValues","Set","createAcceleratedAnimation","valueName","has","pendingCancel","requiresPregeneratedKeyframes","sampleAnimation","pregeneratedKeyframes","animation","element","keyframeOptions","animate","fill","iterations","direction","animateStyle","owner","cancelAnimation","safeCancel","onfinish","set","getFinalKeyframe","attachTimeline","timeline","playbackRate","setWithVelocity","underDampedSpring","keyframesTransition","getDefaultTransition","valueKey","transformProps","isAnimatable","maxDefaults","applyDefaultFilter","name","slice","split","unit","defaultValue","functionRegex","filter","functions","join","defaultValueTypes","numberValueTypes","backgroundColor","outlineColor","stroke","borderColor","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","WebkitFilter","getDefaultValueType","defaultValueType","isZeroValueString","isNone","getValueTransition","transition","animateMotionValue","valueTransition","isTargetAnimatable","defaultOrigin","animatableTemplateValue","noneKeyframeIndexes","getKeyframes","originKeyframe","targetKeyframe","isOriginAnimatable","when","_delay","delayChildren","staggerChildren","staggerDirection","isTransitionDefined","MotionGlobalConfig","skipAnimations","setValue","createInstantAnimation","isHandoff","HTMLElement","acceleratedAnimation","isWillChangeMotionValue","isMotionValue","add","isNumericalString","SubscriptionManager","constructor","this","subscriptions","handler","item","indexOf","index","removeItem","notify","numSubscriptions","getSize","clear","collectMotionValues","MotionValue","init","_this","version","timeDelta","lastUpdated","canTrackVelocity","events","updateAndNotify","render","postRender","scheduleVelocityCheck","change","velocityChange","renderRequest","velocityCheck","hasAnimated","onChange","subscription","on","eventName","unsubscribe","read","clearListeners","eventManagers","attach","passiveEffect","stopPassiveEffect","jump","getPrevious","startAnimation","animationStart","animationComplete","clearAnimation","animationCancel","isAnimating","destroy","motionValue","testValueType","dimensionValueTypes","px","degrees","vw","vh","findDimensionValueType","valueTypes","setMotionValue","hasValue","getValue","addValue","setTarget","resolved","makeTargetAnimatable","transitionEnd","resolveFinalValueInKeyframes","getOriginFromTransition","shouldBlockAnimation","protectedKeys","needsAnimating","shouldBlock","hasKeyframesChanged","animateTarget","transitionOverride","_visualElement$makeTa","willChange","animations","animationTypeState","animationState","getState","valueTarget","window","HandoffAppearAnimations","appearId","optimizedAppearDataAttribute","canSkip","shouldReduceMotion","remove","all","animateVariant","variant","getAnimation","getChildAnimations","variantChildren","size","forwardDelay","maxStaggerDuration","generateStaggerDuration","sort","sortByTreeOrder","child","animateChildren","first","last","sortNodePosition","reversePriorityOrder","variantPriorityOrder","numAnimationTypes","animateList","resolvedDefinition","animateVisualElement","createAnimationState","createTypeState","whileInView","whileHover","whileTap","whileDrag","whileFocus","exit","isInitialRender","buildResolvedTypeValues","acc","animateChanges","changedActiveType","context","getVariantContext","removedKeys","encounteredKeys","removedVariantIndex","typeState","prop","propIsVariant","isVariantLabel","activeDelta","isActive","isInherited","manuallyAnimateOnMount","prevProp","isAnimationControls","shouldAnimateType","checkVariantsDidChange","handledRemovedValues","definitionList","resolvedValues","prevResolvedValues","allKeys","markToAnimate","delete","valueHasChanged","isKeyframesTarget","blockInitialAnimation","fallbackAnimation","fallbackTarget","getBaseTarget","shouldAnimate","initial","setActive","setAnimateFunction","makeAnimator","Feature","node","isMounted","id","super","updateAnimationControlsSubscription","unmount","subscribe","mount","prevAnimate","prevProps","presenceContext","isPresent","onExitComplete","prevIsPresent","prevPresenceContext","exitAnimation","register","addDomEvent","passive","addEventListener","removeEventListener","extractEventInfo","event","pointType","point","y","addPointerEvent","pointerType","button","isPrimary","isPrimaryPointer","addPointerInfo","createLock","lock","openLock","globalHorizontalLock","globalVerticalLock","isDragActive","openGestureLock","drag","openHorizontal","openVertical","getGlobalLock","addHoverEvent","callbackName","handleEvent","isNodeOrChild","parent","parentElement","fireSyntheticPointerEvent","syntheticPointerEvent","PointerEvent","observerCallbacks","WeakMap","observers","fireObserverCallback","entry","fireAllObserverCallbacks","entries","observeIntersection","rootInteresectionObserver","root","lookupRoot","document","rootObservers","JSON","stringify","IntersectionObserver","initIntersectionObserver","observe","unobserve","thresholdNames","gestureAnimations","inView","hasEnteredView","isInView","startObserver","viewport","margin","rootMargin","amount","once","threshold","isIntersecting","onViewportEnter","onViewportLeave","hasOptionsChanged","prevViewport","hasViewportOptionChanged","tap","removeStartListeners","removeEndListeners","removeAccessibleListeners","startPointerPress","startEvent","startInfo","isPressing","removePointerUpListener","endPointerPress","endEvent","endInfo","checkPressEnd","onTap","onTapCancel","globalTapTarget","removePointerCancelListener","cancelEvent","cancelInfo","cancelPress","startPress","startAccessiblePress","removeKeydownListener","keydownEvent","keyupEvent","removeBlurListener","handleBlur","onTapStart","removePointerListener","removeFocusListener","focus","onFocus","isFocusVisible","onBlur","hover","measureViewportBox","instance","transformPoint","top","left","right","bottom","convertBoundingBoxToBox","topLeft","bottomRight","transformBoxPoints","getBoundingClientRect","splitCSSVariableRegex","getVariableValue","depth","fallback","exec","parseCSSVariable","getComputedStyle","getPropertyValue","trimmed","trim","isCSSVariableToken","resolveCSSVariables","assign","TypeError","_objectDestructuringEmpty","positionalKeys","isPositionalKey","isNumOrPxType","getPosFromMatrix","matrix","pos","getTranslateFromMatrix","pos2","pos3","_bbox","matrix3d","transformKeys","nonTranslationalTransformKeys","transformPropOrder","positionalValues","width","_ref2","_ref3","paddingLeft","paddingRight","height","_ref4","_ref5","paddingTop","paddingBottom","_ref6","_ref7","_ref8","_ref9","_ref10","_ref11","translateX","translateY","checkAndConvertChangedValueTypes","targetPositionalKeys","removedTransformValues","hasAttemptedToRemoveTransformValues","changedValueTypeKeys","fromType","toType","numKeyframes","fromIndex","removedTransforms","removeNonTranslationalTransform","scrollY","pageYOffset","convertedTarget","convertChangedValueTypes","changedKeys","originBbox","elementComputedStyle","display","setStaticValue","targetBbox","_ref12","isBrowser","scrollTo","unitConversion","hasPositionalKey","prefersReducedMotion","hasReducedMotionListener","visualElementStore","featureNames","featureDefinitions","numFeatures","propEventHandlers","numVariantProps","variantProps","VisualElement","reducedMotionConfig","visualState","children","isVariantNode","isControllingVariants","Map","features","valueSubscriptions","prevMotionValues","propEventSubscriptions","notifyUpdate","latestValues","triggerBuild","renderInstance","renderState","style","projection","scheduleRender","baseTarget","initialValues","_this$scrapeMotionVal","scrapeMotionValuesFromProps","initialMotionValues","_props","_prevProps","removeFromVariantTree","addVariantChild","bindToMotionValue","matchMedia","motionMediaQuery","setReducedMotionPreferences","addListener","initPrefersReducedMotion","valueIsTransform","removeOnChange","latestValue","isTransformDirty","removeOnRenderRequest","other","sortInstanceNodePosition","loadFeatures","isStrict","preloadedFeatures","initialLayoutGroupConfig","ProjectionNodeConstructor","MeasureLayout","renderedProps","_excluded2","isEnabled","FeatureConstructor","ProjectionNode","MeasureLayoutComponent","layoutId","layout","dragConstraints","layoutScroll","layoutRoot","setOptions","alwaysMeasureLayout","isRefObject","animationType","initialPromotionConfig","updateFeatures","feature","build","measureInstanceViewportBox","getStaticValue","canMutate","makeTargetAnimatableFromInstance","transformTemplate","listener","nextValue","prevValue","existingValue","removeValue","updateMotionValuesFromProps","handleChildMotionValue","getVariant","variants","getTransformPagePoint","transformPagePoint","getClosestVariantNode","closestVariantNode","removeValueFromRenderState","readValue","getBaseTargetFromProps","readValueFromInstance","setBaseTarget","valueFromInitial","args","DOMVisualElement","compareDocumentPosition","vars","transformValues","transitionOrigin","getOrigin","newValueKeys","numNewValues","targetValue","checkTargetForNewValues","parseDomVariant","HTMLVisualElement","defaultType","default","computedStyle","isCSSVariableName","buildHTMLStyles","childSubscription","textContent","styleProp","renderHTML","SVGVisualElement","isSVGTag","camelCaseAttributes","camelToDash","getAttribute","buildSVGAttrs","renderSVG","tagName","src_default","renderer","createDomVisualElement","Component","isSVGComponent","enableHardwareAcceleration"],"sourceRoot":""}